
@{
    byte[] usernameBytes;
    if (Context.Session.TryGetValue("username", out usernameBytes))
    {
        string username = System.Text.Encoding.UTF8.GetString(usernameBytes);
    }
    else
    {
        Context.Response.Redirect("~/Home/Login");
    }
}
@model PagedList.IPagedList<SLA_Management.Models.OperationModel.GatewayTransaction>
@{
    ViewData["Title"] = "Gateway ";
    string[] tableHeaders = new string[]
    {
    "ID",
    "Seqno ",
    "ThaiID",
    "PhoneOTP ",
    "AcctNoTo ",
    "FromBank ",
    "Transtype ",
    "TransDateTime ",
    "TerminalID ",
    "Amount ",
    "Status",
    "ErrorCode"
    };

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Table #6</title>
</head>

<style>
    .bootstrap-select > .dropdown-toggle {
        border-color: #ced4da;
        background-color: transparent;
        position: relative;
        width: 100%;
        text-align: right;
        white-space: nowrap;
        display: -webkit-inline-box;
        display: -webkit-inline-flex;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-box-align: center;
        -webkit-align-items: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: justify;
        -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
        justify-content: space-between;
    }
</style>

<style>
    .chkbox {
        text-align: left;
    }

    .my-dropdown {
        width: 100%;
        height: 38px;
    }

    input:disabled {
        background-color: #f2f2f2;
    }

    .btnsearch {
        font-size: 18px;
    }

    select.form-control {
        -webkit-appearance: button;
    }

    input.form-control {
        -webkit-appearance: button;
        border-radius: 10px;
    }


    #header_search {
        top: 20px;
        position: relative;
        background-color: orange;
        border: solid;
        padding: 8px 40px 8px 40px;
        border-radius: 12px;
        font-weight: 700;
    }

    .item {
        padding: 0px;
    }

    #submit {
        position: relative;
        top: 50px;
        background: lightgray;
        border: 10px double white;
        border-radius: 20px;
        padding: 0px 10px 0px 10px;
    }

    #before-submit {
        display: flex;
        justify-content: center;
    }

    #main_search {
        margin-bottom: 50px;
        padding: 30px 0;
        margin-left: 50px;
        margin-right: 50px;
        border: 3px solid #888888;
        background-color: white;
        border-radius: 50px;
    }

    .dropdown-toggle {
        border-radius: 10px;
    }

    th {
        text-align: center;
    }
</style>


    <div class="container w-auto containerHeader">
   
    <div class="row">
        <div class="col col-md-1">
        </div>
        <div class="col col-md-4">
            <a class="text-white fs-4" id="header_search">Gateway Transaction</a>
        </div>
    </div>

    <div id="main_search">
    
            @using (Html.BeginForm("Transaction", "Gateway", FormMethod.Get, new { id = "GatewayDateRecheckDate" }))
            {
        <div class="row" style="margin-top: 35px;display: flex;align-items: center;justify-content: center;">
              
                    <div class="col-md-1" style="width: 112px;">
                        <h>Terminal ID : </h>
                    </div>
                    <div class="col-md-2 " style="">
                        <div class="">
                            <span class=""><i class="glyphicon glyphicon-calendar"></i></span>
                            @Html.TextBox("terminalno", ViewBag.CurrentTerminalno as string, new { @class = "form-control subsearch", @placeholder = "Terminal ID"})
                        </div>
                    </div>
                 
                    <div class="col-md-1" style="width: 112px;">
                        <h>From Date : </h>
                    </div>
                    <div class="col-md-2 " style="">
                        <div class="">
                            <span class=""><i class="glyphicon glyphicon-calendar"></i></span>
                            @Html.TextBox("fromdate", ViewBag.CurrentFr as string, new { @class = "form-control subsearch", @placeholder = "dd/mm/yyyy", @type = "date", @min = "1997-01-01", @max = "2030-12-31" ,@onfocus="(this.type='date')"})
                        </div>
                    </div>
                    <div class="col-md-1" style="width: 112px;">
                        <h>To Date : </h>
                    </div>
                    <div class="col-md-2" style="">
                        <div class="">
                            <span class=""><i class="glyphicon glyphicon-calendar"></i></span>
                            @Html.TextBox("todate", ViewBag.CurrentTo as string, new { @class = "form-control subsearch", @placeholder = "dd/mm/yyyy", @type = "date", @min = "01-01-1997", @max = "31-12-2030" ,@pattern="dd/mm/yyyy" })
                        </div>
                    </div>
                </div>
        <div class="row" style="margin-top: 35px;display: flex;align-items: center;justify-content: center;">
                 
                    
                    <div class="col-md-1" style="width: 112px;">
                        <h>Account To : </h>
                    </div>
                    <div class="col-md-2" style ="">
                        <div class="">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            @Html.TextBox("acctnoto", ViewBag.CurrentAcctnoto as string, new { @class = "form-control subsearch", @placeholder = "Account No" })
                        </div>
                    </div>
                      <div class="col-md-1" style="width: 112px;">
                        <h>Trx Type : </h>
                    </div>
                    <div class="col-md-2" style ="">
                      
                         <div class="form-group">
                            @Html.DropDownList("transtype", new SelectListItem[] {
                        new SelectListItem(){ Text="ALL", Value = ""  },
                        new SelectListItem(){ Text="DEP : Deposit", Value = "DEP"  },
                        new SelectListItem(){ Text="PAY : Payment", Value = "PAY"  }
                        }, new
                        {
                        @class = "form-control dropdown"
                        ,
                        @name = "state"
                        })
                        </div>
                    </div>
                    <div class="col-md-1" style="width: 112px;">
                        <h>Status : </h>
                    </div>
                    <div class="col-md-2" style="">
                        <div class="form-group">
                            @Html.DropDownList("status", new SelectListItem[] {
                                new SelectListItem(){ Text="ALL", Value = ""  },
                                new SelectListItem(){ Text="Y : Succeed", Value = "Y"  },
                                new SelectListItem(){ Text="N : Failed", Value = "N"  }
                        }, new
                        {
                            @class = "form-control dropdown"
                            ,
                            @name = "state"
                            })
                        </div>
            </div>
                </div>

        <div class="row " style="margin-top: 35px;display: flex;align-items: center;justify-content: center;">

                    <div style="width: 112px;"  class="col-md-1">
                        <h>Rows : </h>
                    </div>

                    <div class="col-md-2" style="">
                        <div class="form-group">
                       
                            @Html.DropDownList("row", new SelectListItem[] {
                                new SelectListItem(){ Text="20", Value = "20"  },
                                new SelectListItem(){ Text="100", Value = "100"  },
                                new SelectListItem(){ Text="500", Value = "500"  }
                            }, new
                            {
                                @class = "form-control dropdown"
                                ,
                                @name = "state"

                            })

                        </div>
                    </div>
                    <div style="width: 112px;" class="col-md-1">
                        <h>Sort : </h>
                    </div>
                    <div class="col-md-2">
                    <div class="form-group">
                      
                        @Html.DropDownList("sort", new SelectListItem[] {
                            new SelectListItem(){ Text="ASC", Value = "asc"  },
                            new SelectListItem(){ Text="DESC", Value = "desc"  }
                        }, new
                        {
                            @class = "form-control dropdown"
                            ,
                            @name = "state"

                        })

                    </div>
                    </div>
                    <div style="width: 112px;" class="col-md-1"></div>
                    <div class="col-md-2"></div>
                </div>

                <div class="row">

                    <div class="col" id="before-submit">
                    <div id="submit">

                        <button type="button" data-toggle="modal" data-target="#WaitingModal" id="btnsearch" class="btn" style="padding:0px;" onclick="updateTable('search')">
                        <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Search" />
                    </button>
                    <button type="submit" id="btnclear" data-toggle="modal" data-target="#WaitingModal" onclick="clearFunction()" class="btn" data-toggle="tooltip" name="cmdButton" title="ล้างข้อมูล" value="Clear" style="padding:0px;border: 0px; background-color: transparent;">
                        <img src="~/images/icon_delete.png" style="width: 50px; height: 50px" class="rounded-lg p-0" alt="Clear Data" />
                    </button>
                   <a id="btnSEExp" data-toggle="tooltip" title="Excel Export Report" style="cursor: pointer; padding:0px;">
                        <img src="~/images/icon_excel.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Excel Export Report" />
                    </a>
                    </div>
                    </div>
                </div>
            }

        </div>
</div>
        <div class="container-fluid">
        <div class="table-responsive" style="overflow-x: hidden;">
            <table id="table-id" class="table table-striped custom-table">
                <thead id="t-header" style="">
                    <tr>
                        @{
                            foreach (var head in tableHeaders)
                            {
                                <th scope="col" style="text-align:center"> @head </th>
                            }
                        }

                    </tr>
                </thead>

                <tbody>
                  
                </tbody>


            </table>


            <div class="row">
                <div class="col-md-2" style="z-index:2;">
                    <p style="font-size:16px;font-weight:bolder;">
                        Select page :
                        @Html.DropDownList("page", new SelectListItem[] {

                        }, new
                        {
                        @class = "form-control"
                        })
                    </p>
                </div>
            <div class="col colPagination" style="padding-top:10px;z-index:1;">

                <nav>
                    <div class="pagination">
                        <li data-page="prev" id="prev" style="visibility:hidden;" onclick="updateTable('prev')">
                            <a style="color: #7a7a7a;"> < </a>
                        </li>
                        <li data-page="next" id="next" style="visibility:hidden;" onclick=" updateTable('next')">
                            <a style="color: #7a7a7a;"> > </a>
                        </li>

                    </div>
                </nav>
            </div>
            </div>

        </div>

    </div>



<script>
    function DisableBackButton() {
        window.history.forward();
    }
    DisableBackButton();
    window.onload = DisableBackButton;
    window.onpageshow = function (evt) { if (evt.persisted) DisableBackButton(); }
    window.onunload = function () { void (0); };
    $("#page").change(function () {
        updateTable('notsearch');
    });
    function updateTable(search) {
        var terminalno = $("#terminalno").val();
        var acctnoto = $("#acctnoto").val();
        var transtype = $("#transtype").val();
        var todate = $("#todate").val();
        var fromdate = $("#fromdate").val();
        var status = $("#status").val();
        var row = $("#row").val();
        var page = $("#page").val();
        var sort = $("#sort").val();
        var prevDiv = document.getElementById("prev");
        var nextDiv = document.getElementById("next");
        $.ajax({
            type: "GET",
            url: '@Url.Action("GatewayFetchData", "Gateway")',
            data: {
                terminalno: terminalno,
                acctnoto: acctnoto,
                transtype: transtype,
                todate: todate,
                fromdate: fromdate,
                status: status,
                row: row,
                page: page,
                search: search,
                sort: sort
            },
            dataType: "json",
            success: function (data) {

                var jsondata = data.jsonData;
                var pages = data.page;
                var currentpage = data.currentPage;
         
                $("#table-id tbody").empty();
                $.each(jsondata, function (index, item) {
                    var row = $("<tr>");
                    row.append($("<td>").css("text-align", "center").text(item.id));
                    row.append($("<td>").css("text-align", "center").text(item.seqNo));
                    row.append($("<td>").css("text-align", "center").text(item.thaiID));
                    row.append($("<td>").css("text-align", "center").text(item.phoneOTP));
                    row.append($("<td>").css("text-align", "center").text(item.acctNoTo));
                    row.append($("<td>").css("text-align", "center").text(item.fromBank));
                    row.append($("<td>").css("text-align", "center").text(item.transType));
                    row.append($("<td>").css("text-align", "right").text(item.transDateTime));
                    row.append($("<td>").css("text-align", "center").text(item.terminalNo));
                    row.append($("<td>").css("text-align", "right").text(item.amount));
                    row.append($("<td>").css("text-align", "center").text(item.updateStatus));
                    row.append($("<td>").text(item.errorCode));
                    $("#table-id tbody").append(row);
                    window.scrollTo(0, 0);
                });
                if (pages >= 1) {
               
                    $("#page").empty();
                    for (var i = 1; i <= pages; i++) {
                        var option = $('<option>', {
                            value: i,
                            text: i
                        });
                        if (i === currentpage) {
                            option.prop("selected", true);
                        }
                        $("#page").append(option);

                    }    
                }
                else {
                    $("#page").empty();
                    var option = $('<option>', {
                        value: 1,
                        text: 1
                    });
                    $("#page").append(option);
                    
                }
                console.log(currentpage + "  " + pages + "  " + page)
                if ((currentpage == 1 || page == null)&& pages > 1) {
                    prevDiv.style.visibility = "hidden";
                    nextDiv.style.visibility = "visible";
                 
                }
                else if ((currentpage == pages)&& pages > 1) {
                    prevDiv.style.visibility = "visible";
                    nextDiv.style.visibility = "hidden";
                 
                }
                else if ((currentpage < pages) && pages > 1) {
                    prevDiv.style.visibility = "visible";
                    nextDiv.style.visibility = "visible";
                  
                }
                else{
                    prevDiv.style.visibility = "hidden";
                    nextDiv.style.visibility = "hidden";
                   
                }
            },
            error: function (error) {
                console.log("Error: " + JSON.stringify(error));
            }
        });
    }



    $("#btnSEExp").click(function (e) {
        e.preventDefault();
        var terminalno = $("#terminalno").val();
        var fromdate = $("#fromdate").val();
        var todate = $("#todate").val();
        console.log(terminalno+' '+fromdate+' '+todate);
        var expParams = "xlsx" + '|' + $("#frDate").val() + '|' + $("#toDate").val()
            + '|' + "xlsx";
        var rptType = "xlsx";
        $.ajax({
            type: "POST",
            dataType: "json",
            data: '{ "exparams" : "' + expParams + '" }',
            contentType: 'application/json; charset=utf-8',
            url: '@Url.Action("Gateway_ExportExc", "Gateway")',
            data: {
                terminalno: terminalno,
                todate: todate,
                fromdate: fromdate
            },
            success: function (result) {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: '{ "exparams" : "' + expParams + '" }',
                    contentType: 'application/json; charset=utf-8',
                    url: '@Url.Action("Gateway_ExportExc", "Gateway")',
                    data: {
                        terminalno: terminalno,
                        todate: todate,
                        fromdate: fromdate
                    },
                    success: function (result) {
                        if (result.success == 'S') {
                            var url = '@Url.Action("DownloadExportFile", "Gateway")'
                            window.location = '@Url.Action("DownloadExportFile", "Gateway")/?rpttype=' + rptType;
                        }
                        else { alert(result.errstr); }
                    },
                    error: function (err) {
                        alert('@ViewBag.ErrorMsg');
                    }
                });
                if (result.success == 'S') {
                    var url = '@Url.Action("DownloadExportFile", "Gateway")'
                    window.location = '@Url.Action("DownloadExportFile", "Gateway")/?rpttype=' + rptType;
                }
                else { alert(result.errstr); }
            },
            error: function (err) {
                alert('@ViewBag.ErrorMsg');
            }
        });
       
    });



</script>
