@using System.Globalization
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model PagedList.IPagedList<SLA_Management.Models.ReportModel.SLAReportMonthly>
@{
    ViewData["Title"] = "D1 Operation - SLA Report";
    string[] tableHeaders = new string[]{
    "ID ",
    "Action ",
    "Terminal ID ",
    "SERIAL NO",
    "Terminal Name",
    "SERVICE DATE",
    "TOTAL DOWNTIME",
    "%SLA Actual",
    "NETCHARGE"
    };
}  <script>

  </script>
  <style>
      .chkbox{
          text-align:left;
      }
      .my-dropdown {
        width :100%;
        height:100%;
      }
      input:disabled {
        background-color: #f2f2f2;

      }
  </style>
<div class="row" style="margin-left:0px;margin-right:0px; width: 100%;">

    <div class="col-md-2">
        <p class="text-black fs-3">Terminal ID</p>
    </div>
    <div class="col-md-2">
        <p class="text-black fs-3">SERIAL NO</p>
    </div>
    <div class="col-md-2">
        <p class="text-black fs-3">Month</p>
    </div>
    <div class="col-md-2">
        <p class="text-black fs-3">Year</p>
    </div>
    <div class="col-md-1">
        <p class="text-black fs-3">Order by</p>
    </div>
    <div class="col-md-1">
        <p class ="text-black fs-3">Sort by</p>
    </div>
</div>

@using (Html.BeginForm("SlaReportMonthly", "Operation", FormMethod.Get, new { id = "IndexID" }))
{
    <div class="row" style="margin-left:0px;margin-right:0px;">

        <div class="col-md-2">

            @Html.TextBox("TerminalID", ViewBag.TerminalID as string, new { @class = "form-control subsearch", @placeholder = "Terminal ID" })
        </div>
        <div class="col-md-2">

            @Html.TextBox("TerminalSEQ", ViewBag.TerminalSEQ as string, new { @class = "form-control subsearch", @placeholder = "Serial No" })
        </div>
        <div class="col-md-2">
                    @Html.DropDownList("Month", new SelectList(CultureInfo.CurrentCulture.DateTimeFormat.MonthNames), "Select Month", new{ @class = "my-dropdown",@required = "required" })
        </div>
        
        <div class="col-md-2"> 
                    @Html.DropDownList("Year", new SelectList(Enumerable.Range(DateTime.Now.Year - 5, 6).Reverse()), "Select Year", new{ @class = "my-dropdown",@required = "required" })
        </div>  

        <div class="col-md-1">
                    @Html.DropDownList("Orderby", new SelectListItem[] { 
                        new SelectListItem(){ Text="Serial No", Value = "TERM_SEQ" },
                        new SelectListItem(){ Text="TerminalID", Value = "TERM_ID" },
                        new SelectListItem(){ Text="Total Downtime", Value = "TOTALDOWNTIME_HOUR" },
                        new SelectListItem(){ Text="NET CHARGE", Value = "NETCHARGE" },
                    }, new
                    {
                        @class = "my-dropdown",
                        @name = "state"
                    })

   
        </div>
        <div class="col-md-1">
           @Html.DropDownList("Sortby", new SelectListItem[] { new SelectListItem(){ Text="น้อยไปมาก", Value = "ASC"  },
                new SelectListItem(){ Text="มากไปน้อย", Value = "DESC" }
            }, new
            {
            @class = "my-dropdown",
            @name = "state"
     })
        </div>
        <div class="col-md-1" style="margin-left:0px;margin-right:0px;">
            <button type="submit" id="btnsearch" class="btnsearch">search  </button>
        </div>
        <div class="col-md-1" style="margin-left:0px;margin-right:0px;">
            <button type="reset" id="btnsearch" class="btnsearch">Reset  </button>
        </div>

    </div>
    
    <div class="row" style="margin-top: 15px">
    <div class="col-md-1 colRows">
        <p style="font-size:16px;font-weight:bolder;">Rows : </p>
    </div>

    <div class="col-md-1" style="padding-top: 10px;">
        <div class="form-group">
            <!--		Show Numbers Of Rows 		-->
            @Html.DropDownList("maxRows", new SelectListItem[] {
            new SelectListItem(){ Text="20", Value = "20"  },
            new SelectListItem(){ Text="50", Value = "50"  },
            new SelectListItem(){ Text="100", Value = "100" },
            new SelectListItem(){ Text="200", Value = "200"  },
            new SelectListItem(){ Text="1000", Value = "1000"  }
            }, new
            {
            @class = "form-control"
            ,
            @name = "state"

            })

        </div>
    </div>
</div>
}


<div class="table-responsive" style="overflow-x: hidden;">
    <table id="table-id" class="table table-striped custom-table" style="">
        <thead>
            <tr>
                @{
                    foreach (var head in tableHeaders)
                    {
                        <th scope="col"> @head </th>
                    }
                }

            </tr>
        </thead>

        <tbody>
            @{
                if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.ID</td>
                            <td style="text-align: center;">
                                <a class="btn btn-light text-dark" id="btnEdit" data-toggle="modal" data-target="#myModal"
                                   onclick="EditButton_m('@item.ID', '@item.REPORT_MONTH', '@item.TERM_ID', '@item.TERM_SEQ', '@item.LOCATION', '@item.PROVINCE', '@item.INSTALL_LOT', '@item.REPLENISHMENT_DATE', '@item.STARTSERVICE_DATE', '@item.STARTSERVICEDAY', '@item.TOTALSTARTSERVICEDAY', '@item.SERVICE_GROUP', '@item.SERVICE_DATE', '@item.STARTSERVICEDATE', '@item.TOTALSTARTSERVICEDATE', '@item.SERVICETIME_PERDAY', '@item.SERVICETIME_PERHOUR', '@item.SERVICETIME_PERMINUTE', '@item.TOTALDOWNTIME_HOUR', '@item.TOTALDOWNTIME_MINUTE', '@item.TOTALSERVICETIME_PERHOUR', '@item.TOTALSERVICETIME_PERMINUTE', '@item.PERCENTSLA', '@item.SLA', '@item.RATECHARGE', '@item.SERVICECHARGE', '@item.NETSERVICECHARGE', '@item.REMARK', '@item.REASONFORWAIVEDOWNTIME', '@item.TERM_NAME')"
                                   data-toggle="tooltip" name="cmdButton" title="View" value="View" style="cursor: pointer; border-radius: 40px; letter-spacing: 2px;">View</a>
                            </td>
                            <td>@item.TERM_ID</td>
                            <td>@item.TERM_SEQ</td>
                            <td>@item.TERM_NAME</td>
                            <td>@item.SERVICE_DATE</td>
                            <td>@item.TOTALDOWNTIME_HOUR</td>
                            <td>@item.PERCENTSLA</td>
                            <td>@item.NETSERVICECHARGE</td>
                        </tr>
                    }

                }
                if (Model.Count == 0)   
                {

                <td colspan="12" style="text-align: center;"> NO DATA </td>
                }
            }
        </tbody>


    </table>
    <div class="row">
        <div class="col-md-2" style="z-index:2;">
            <p style="font-size:16px;font-weight:bolder;">
                Select page :
                @Html.DropDownList("seletePageNow", new SelectListItem[] {

                }, new
                {
                @class = "form-control"
                })
            </p>
        </div>
        <div class="col colPagination" style="padding-top:10px;z-index:1;">

            <nav>
                <div class="pagination">
                    <li data-page="prev" id="back">
                        <a style="color: #454545;"> < </a>
                    </li>
                    <!--	Here the JS Function Will Add the Rows -->
                    <li data-page="next" id="prev">
                        <a style="color: #454545;"> > </a>
                    </li>

                </div>
            </nav>
        </div>
    </div>
    <div class="row">
    </div>

</div>
@using (Html.BeginForm("SlaReportMonthly", "Operation", FormMethod.Get, new { id = "ModalTransactionID" }))
{
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="container-fluid" style="padding: 10px;">
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="No">No</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("ID", ViewBag.ID as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="REPORT_MONTH">REPORT MONTH</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("REPORT_MONTH", ViewBag.REPORT_MONTH as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="TERM_ID">TERMINAL ID</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TERM_ID", ViewBag.TERM_ID as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="TERM_SEQ">SERIAL NO</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TERM_SEQ", ViewBag.TERM_SEQ as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="LOCATION">LOCATION</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("LOCATION", ViewBag.LOCATION as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="PROVINCE">PROVINCE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("PROVINCE", ViewBag.PROVINCE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="INSTALL_LOT">INSTALL LOT</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("INSTALL_LOT", ViewBag.INSTALL_LOT as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="REPLENISHMENT_DATE">REPLENISHMENT DATE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("REPLENISHMENT_DATE", ViewBag.REPLENISHMENT_DATE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="STARTSERVICE_DATE">START SERVICE DATE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("STARTSERVICE_DATE", ViewBag.STARTSERVICE_DATE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="STARTSERVICEDAY">START SERVICE DAY</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("STARTSERVICEDAY", ViewBag.STARTSERVICEDAY as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="TOTALSTARTSERVICEDAY">TOTAL START SERVICE DAY</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TOTALSTARTSERVICEDAY", ViewBag.TOTALSTARTSERVICEDAY as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="SERVICE_GROUP">SERVICE GROUP</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("SERVICE_GROUP", ViewBag.SERVICE_GROUP as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="SERVICE_DATE">SERVICE DATE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("SERVICE_DATE", ViewBag.SERVICE_DATE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="STARTSERVICEDATE">START SERVICE DATE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("STARTSERVICEDATE", ViewBag.STARTSERVICEDATE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="TOTALSTARTSERVICEDATE">TOTAL START SERVICE DATE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TOTALSTARTSERVICEDATE", ViewBag.TOTALSTARTSERVICEDATE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="SERVICETIME_PERDAY">SERVICE TIME PER DAY</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("SERVICETIME_PERDAY", ViewBag.SERVICETIME_PERDAY as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="SERVICETIME_PERHOUR">SERVICE TIME PER HOUR</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("SERVICETIME_PERHOUR", ViewBag.SERVICETIME_PERHOUR as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="SERVICETIME_PERMINUTE">SERVICE TIME PER MINUTE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("SERVICETIME_PERMINUTE", ViewBag.SERVICETIME_PERMINUTE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="TOTALDOWNTIME_HOUR">TOTAL DOWNTIME HOUR</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TOTALDOWNTIME_HOUR", ViewBag.TOTALDOWNTIME_HOUR as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="TOTALDOWNTIME_MINUTE">TOTAL DOWNTIME MINUTE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TOTALDOWNTIME_MINUTE", ViewBag.TOTALDOWNTIME_MINUTE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="TOTALSERVICETIME_PERHOUR">TOTAL SERVICE TIME PER HOUR</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TOTALSERVICETIME_PERHOUR", ViewBag.TOTALSERVICETIME_PERHOUR as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="TOTALSERVICETIME_PERMINUTE">TOTAL SERVICE TIME PER MINUTE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TOTALSERVICETIME_PERMINUTE", ViewBag.TOTALSERVICETIME_PERMINUTE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="PERCENTSLA">PERCENT SLA</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("PERCENTSLA", ViewBag.PERCENTSLA as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="SLA">SLA</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("SLA", ViewBag.SLA as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="RATECHARGE">RATE CHARGE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("RATECHARGE", ViewBag.RATECHARGE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="SERVICECHARGE">SERVICE CHARGE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("SERVICECHARGE", ViewBag.SERVICECHARGE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="NETSERVICECHARGE">NET SERVICE CHARGE</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("NETSERVICECHARGE", ViewBag.NETSERVICECHARGE as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="REMARK">REMARK</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("REMARK", ViewBag.REMARK as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-2 modelTopic"><label for="REASONFORWAIVEDOWNTIME">REASON FOR WAIVE DOWNTIME</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("REASONFORWAIVEDOWNTIME", ViewBag.REASONFORWAIVEDOWNTIME as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                        <div class="col-md-2 modelTopic"><label for="TERM_NAME">TERM NAME</label></div>
                        <div class="col-md-3 modelTextbox">@Html.TextBox("TERM_NAME", ViewBag.TERM_NAME as string, new { @class = "w-100 form-control", @readonly = "true" })</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
  
 
    var maxRows = @ViewBag.maxRows;
    var md_Count = @ViewBag.totaldata;
        getPagination('#table-id', maxRows);
        function getPagination(table, row) {
            var lastPage = 1;

            $('#maxRows')
                .on('change', function (evt) {
                    $('.paginationprev').html('')

                    lastPage = 1; 
                    $('.pagination')
                        .find('li')
                        .slice(1, -1)
                        .remove();
                    var trnum = 0;
                    var maxRows = parseInt($(this).val());

                    if (maxRows == 5000) {
                        $('.pagination').hide();
                    } else {
                        $('.pagination').show();
                    }

                    var totalRows = $(table + ' tbody tr').length; // numbers of rows
                    $(table + ' tr:gt(0)').each(function () {
                        // each TR in  table and not the header
                        trnum++; // Start Counter
                        if (trnum > maxRows) {
                            // if tr number gt maxRows

                            $(this).hide(); // fade it out
                        }
                        if (trnum <= maxRows) {
                            $(this).show();
                        } // else fade in Important in case if it ..
                    }); //  was fade out to fade it in
                    if (totalRows > maxRows) {
                        // if tr total rows gt max rows option
                        var pagenum = Math.ceil(totalRows / maxRows); // ceil total(rows/maxrows) to get ..
                        //	numbers of pages

                        for (var i = 1; i <= pagenum;) {
                            // for each page append pagination li
                            $('.pagination #prev')
                                .before(
                                    '<li data-page="' +
                                    i +
                                    '">\
                                           <a style="color: #454545;">' +
                                    i++ +
                                    '\
                                                    </li>'
                                )
                                .show();
                        } // end for i
                        $('#back').show();



                    } else {
                        $('#back').hide();
                        $('#prev').hide();
                    }

                    // end if row count > max rows
                    $('.pagination [data-page="1"]').addClass('active'); // add active class to the first li
                    $('.pagination li').on('click', function (evt) {
                        // on click each page
                        evt.stopImmediatePropagation();
                        evt.preventDefault();
                        var pageNum = $(this).attr('data-page'); // get it's number

                        var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option



                        if (pageNum == 'prev') {
                            if (lastPage == 1) {
                                return;
                            }
                            pageNum = --lastPage;
                        }
                        if (maxRows < totalRows) {
                            if (pageNum == 'next') {
                                if (lastPage == $('.pagination li').length - 2) {
                                    return;
                                }
                                pageNum = ++lastPage;
                            }
                        }


                        lastPage = pageNum;
                        var trIndex = 0; // reset tr counter
                        $('.pagination li').removeClass('active'); // remove active class from all li
                        $('.pagination [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                        // $(this).addClass('active');					// add active class to the clicked
                        limitPagging();
                        $(table + ' tr:gt(0)').each(function () {
                            // each tr in table not the header
                            trIndex++; // tr index counter
                            // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                            if (
                                trIndex > maxRows * pageNum ||
                                trIndex <= maxRows * pageNum - maxRows
                            ) {
                                $(this).hide();
                            } else {
                                $(this).show();
                            } //else fade in
                        }); // end of for each tr in table


                        $('#seletePageNow').val(lastPage);




                    }); // end of on click pagination list


                    $('#seletePageNow')
                        .find('option')
                        .remove()
                        .end();


                    var pagenum = Math.ceil(md_Count / parseInt($('#maxRows').val()));


                    var select = document.getElementById("seletePageNow");
                    for (var i = parseInt(pagenum); i > 0; i--) {
                        var option = document.createElement('option');
                        option.text = option.value = i;
                        select.add(option, 0);
                    }

                    $('#seletePageNow').val(lastPage);

                })
                .val(row)
                .change();



            $('#seletePageNow')
                .on('change', function (evt) {
                    // on click each page
                    evt.stopImmediatePropagation();
                    evt.preventDefault();
                    var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option

                    var pageNum = $(this).val();

                    if (pageNum == null) pageNum = 1;





                    lastPage = pageNum;
                    var trIndex = 0; // reset tr counter
                    $('.pagination li').removeClass('active'); // remove active class from all li
                    $('.pagination [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                    // $(this).addClass('active');					// add active class to the clicked
                    limitPagging();
                    $(table + ' tr:gt(0)').each(function () {
                        // each tr in table not the header
                        trIndex++; // tr index counter
                        // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                        if (
                            trIndex > maxRows * pageNum ||
                            trIndex <= maxRows * pageNum - maxRows
                        ) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        } //else fade in
                    }); // end of for each tr in table
                }).change();



            // end of on select change

            // END OF PAGINATION
        }


        function limitPagging() {

                    if ($('.pagination li').length > 7) {
                        if ($('.pagination li.active').attr('data-page') <= 3) {
                            $('.pagination li:gt(5)').hide();
                            $('.pagination li:lt(5)').show();
                            $('.pagination [data-page="next"]').show();
                        } if ($('.pagination li.active').attr('data-page') > 3) {
                            $('.pagination li:gt(0)').hide();
                            $('.pagination [data-page="next"]').show();
                            for (let i = (parseInt($('.pagination li.active').attr('data-page')) - 2); i <= (parseInt($('.pagination li.active').attr('data-page')) + 2); i++) {
                                $('.pagination [data-page="' + i + '"]').show();

                            }

                        }
                    }
        }
    function EditButton_m(ID, REPORT_MONTH, TERM_ID, TERM_SEQ, LOCATION, PROVINCE, INSTALL_LOT, REPLENISHMENT_DATE, STARTSERVICE_DATE, STARTSERVICEDAY, TOTALSTARTSERVICEDAY, SERVICE_GROUP, SERVICE_DATE, STARTSERVICEDATE, TOTALSTARTSERVICEDATE, SERVICETIME_PERDAY, SERVICETIME_PERHOUR, SERVICETIME_PERMINUTE, TOTALDOWNTIME_HOUR, TOTALDOWNTIME_MINUTE, TOTALSERVICETIME_PERHOUR, TOTALSERVICETIME_PERMINUTE, PERCENTSLA, SLA, RATECHARGE, SERVICECHARGE, NETSERVICECHARGE, REMARK, REASONFORWAIVEDOWNTIME, TERM_NAME) {
        document.getElementById('ID').value = ID || '-';
        document.getElementById('REPORT_MONTH').value = REPORT_MONTH || '-';
        document.getElementById('TERM_ID').value = TERM_ID || '-';
        document.getElementById('TERM_SEQ').value = TERM_SEQ || '-';
        document.getElementById('LOCATION').value = LOCATION || '-';
        document.getElementById('PROVINCE').value = PROVINCE || '-';
        document.getElementById('INSTALL_LOT').value = INSTALL_LOT || '-';
        document.getElementById('REPLENISHMENT_DATE').value = REPLENISHMENT_DATE || '-';
        document.getElementById('STARTSERVICE_DATE').value = STARTSERVICE_DATE || '-';
        document.getElementById('STARTSERVICEDAY').value = STARTSERVICEDAY || '-';
        document.getElementById('TOTALSTARTSERVICEDAY').value = TOTALSTARTSERVICEDAY || '-';
        document.getElementById('SERVICE_GROUP').value = SERVICE_GROUP || '-';
        document.getElementById('SERVICE_DATE').value = SERVICE_DATE || '-';
        document.getElementById('STARTSERVICEDATE').value = STARTSERVICEDATE || '-';
        document.getElementById('TOTALSTARTSERVICEDATE').value = TOTALSTARTSERVICEDATE || '-';
        document.getElementById('SERVICETIME_PERDAY').value = SERVICETIME_PERDAY || '-';
        document.getElementById('SERVICETIME_PERHOUR').value = SERVICETIME_PERHOUR || '-';
        document.getElementById('SERVICETIME_PERMINUTE').value = SERVICETIME_PERMINUTE || '-';
        document.getElementById('TOTALDOWNTIME_HOUR').value = TOTALDOWNTIME_HOUR || '-';
        document.getElementById('TOTALDOWNTIME_MINUTE').value = TOTALDOWNTIME_MINUTE || '-';
        document.getElementById('TOTALSERVICETIME_PERHOUR').value = TOTALSERVICETIME_PERHOUR || '-';
        document.getElementById('TOTALSERVICETIME_PERMINUTE').value = TOTALSERVICETIME_PERMINUTE || '-';
        document.getElementById('PERCENTSLA').value = PERCENTSLA || '-';
        document.getElementById('SLA').value = SLA || '-';
        document.getElementById('RATECHARGE').value = RATECHARGE || '-';
        document.getElementById('SERVICECHARGE').value = SERVICECHARGE || '-';
        document.getElementById('NETSERVICECHARGE').value = NETSERVICECHARGE || '-';
        document.getElementById('REMARK').value = REMARK || '-';
        document.getElementById('REASONFORWAIVEDOWNTIME').value = REASONFORWAIVEDOWNTIME || '-';
        document.getElementById('TERM_NAME').value = TERM_NAME || '-';
    }



</script>
