@using System.Globalization;

@{
    ViewData["Title"] = "Encryption Monitor";
    string[] tableHeaders = new string[]{
    "Serial No.",
    "Terminal ID",
    "Terminal Name",
    "Counter Code",
    "Encryption Version",
    "Policy"
    };    
}
<style>
      #header_search {
        top: 20px;
        position: relative;
        background-color: orange;
        border: solid;
        padding: 8px 40px 8px 40px;
        border-radius: 12px;
        font-weight: 700;
    }
      #main_search {
        margin-bottom: 50px;
        padding: 30px 3vw 30px 3vw;
        margin-left: 50px;
        margin-right: 50px;
        border: 3px solid #888888;
        background-color: white;
        border-radius: 50px;
    }
    .item 
    {
        padding: 0px;
    }
     select.form-control {
        -webkit-appearance: button;
    }
     #before-submit {
        display: flex;
        justify-content: center;
    }
    #submit {
        position: relative;
        top: 50px;
        background: lightgray;
        border: 10px double white;
        border-radius: 20px;
        padding: 0px 10px 0px 10px;
    }
    .boxDownload {
        background-color: rgba(255, 255, 255, 0.5);
        position: fixed;
        top: 0px;
        right: 0px;
        bottom: 0px;
        left: 0px;
        pointer-events: none;
        z-index: 10;
    }
    .imgDownload {
        position: sticky;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

</style>

<div class="content contentHeader">
    <div class="container w-auto containerHeader" style="padding-bottom: 0px;">
        <div class="row">
            <div class="col col-md-1">
            </div>
            <div class="col col-md-4">
                <a class="text-white fs-4" id="header_search">Encryption Monitor</a>
            </div>
        </div>

        <div id="main_search">
            @using (Html.BeginForm("Encryption", "Monitor", FormMethod.Get, new { id = "CheckDate" }))
            {                   
                <div class="row" style="margin-top: 45px;align-items:center;    display: flex;justify-content: space-between;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">

                        <div class="col-2" style="">
                            <h>Terminal : </h>
                        </div>

                        <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                            <select class="selectpicker form-control subsearch" id="terminalId" name="terminalId" data-live-search="true">
                                <option data-tokens="" value="">--</option>
                                @foreach (var item in ViewBag.CurrentTID)
                                {
                                    if (@item.TERM_ID != @ViewBag.terminalId)
                                    {
                                        <option value=@item.TERM_ID data-tokens=@item.TERM_ID>@item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME</option>
                                    }
                                    else
                                    {
                                        <option value=@item.TERM_ID data-tokens=@item.TERM_ID selected>@item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-2" style="">
                            <h>Policy : </h>
                        </div>
                        <div class="col-2" style="padding:0px;">
                            <div class="form-group">
                                @Html.DropDownList("policy", ViewBag.policy as SelectList, "--", new { @class = "form-control" })
                            </div>
                        </div>  
                        <div class="col-4"></div>
                    </div>
                <div class="row " style="margin-top: 45px;align-items:center;display: flex;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">
                    <div class="col-2" style="">
                            <h>Counter Code : </h>
                    </div>

                    <div class="col-2" style="padding:0px;">
                        <div class="form-group">
                            @Html.DropDownList("counterCode", ViewBag.counterCode as SelectList, "--", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-2" style="">
                        <h>Encryption Version : </h>
                    </div>
                    <div class="col-2" style="padding:0px;">
                        <div class="form-group">
                            @Html.DropDownList("version", ViewBag.version as SelectList, "--", new { @class = "form-control" })
                        </div>
                    </div>   
                    <div class="col-2" style="">
                        <h>Rows : </h>
                    </div>
                    <div class="col-2" style="padding:0px;">
                        <div class="form-group">
                            @Html.DropDownList("maxRows", new SelectListItem[] {
                            new SelectListItem(){ Text="50", Value = "50" },
                            new SelectListItem(){ Text="100", Value = "100"  },
                            new SelectListItem(){ Text="500", Value = "500"  },
                            new SelectListItem(){ Text="1000", Value = "1000"  }
                            }, 
                            new{
                                @class = "form-control dropdown",
                                @style = " border-radius: 10px;",
                                @name = "state"
                                })
                         </div>
                        
                    </div>
                </div>          
                @if (Context.Session.GetString("Role") != "User")
                {
                    <div class="row justify-content-md-center" style="padding: 50px 50px 0px 50px;">
                        <div id="dropArea" class="border p-5 text-center">
                            <p>Drag and drop your Excel files here</p>
                            <p>or</p>
                            <input type="file" id="fileInput" multiple hidden />
                            <button type="button" class="btn btn-primary" onclick="triggerFileInput()">Browse Files</button>
                        </div>
                        <div id="progressBars" class="mt-3"></div>
                        <div id="message" class="mt-3"></div>
                    </div>
                }
                
                <div class="row">
                    <div class="col" id="before-submit">
                        <div id="submit">
                            <button type="submit" id="btnsearch" title="ค้นหาข้อมูล" class="btn" style="padding:0px;">
                                <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Search" />
                            </button>
                            <button type="submit" id="btnclear" class="btn" data-toggle="tooltip" name="clearButton" title="ล้างข้อมูล" value="Clear" style="padding:0px;border: 0px; background-color: transparent;">
                                <img src="~/images/icon_refresh.png" style="width: 40px; height: 38px" class="rounded-lg p-0" alt="Clear Data" />                                    
                            </button>
                            <a id="btnSEExp" data-toggle="tooltip" title="Excel Export Report" style="cursor: pointer; padding:0px;">
                                <img src="~/images/icon_excel.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Excel Export Report" />
                            </a>            
                        </div>
                    </div>        
                </div>
            }
        </div>
    </div>
    <div class="container-fluid">
         <div class="row" style="background-color: #f8d5ad;width: fit-content;padding: 8px;margin-left: 3px;border-radius: 15px;font-size: 22px;font-weight: bold;margin-bottom: 15px; border:1px solid lightgrey;">
             <div class="col" style="display: flex;justify-content: center;">
                <a style="white-space:nowrap;align-items: center;display: flex;">Total Record:</a>
            </div>
            <div class="col" style="display: flex;justify-content: center;">
                <a style="white-space:nowrap;display: flex;align-items: center;background-color: rgba(255,255,255,1);padding: 10px 35px 10px 35px;border-radius: 10px;" ;="">@ViewBag.Records</a>
            </div>
         </div>
         <div class="table-responsive" style="overflow-x: hidden;">
            <table id="table-id" class="table table-striped custom-table">
                <thead>
                    <tr>
                        @{
                            foreach (var head in tableHeaders)
                            {
                                <th scope="col" style="text-align:center"> @head </th>
                            }
                        }

                    </tr>
                </thead>

                <tbody>
                    @{
                        if (Model != null)
                        {
                            foreach (var Data in Model)
                            {
                                <tr>
                                    <td style="text-align:center;"> @Data.Terminal_SEQ </td>
                                    <td style="text-align:center;"> @Data.Terminal_ID </td>
                                    <td style="text-align:center;"> @Data.Terminal_NAME </td>
                                    <td style="text-align:center;"> @Data.Counter_Code </td>                                                                         
                                    <td style="text-align:center;"> @Data.Version </td>     
                                    <td style="text-align:center;"> @Data.Policy </td>
                                </tr>               
                            }
                        }
                        if (Model.Count == 0)
                        {
                            <td colspan="11" style="text-align: center;"> NO DATA </td>
                        } 
                    } 
                </tbody>
            </table>
            <div class="row">
                <div class="col colPagination" style="padding-top:10px;z-index:1;">
                    <nav>
                        <div class="pagination">
                            <li data-page="prev" id="back" style="background-color:transparent;">
                                <img style="height:40px;width:auto;margin-right:10px;" src="~/images/arrow.png" />
                            </li>
                            
                            <li data-page="next" id="prev" style="background-color:transparent;">
                                <img style="height:40px;width:auto;margin-left:10px;transform:scaleX(-1)" src="~/images/arrow.png" />
                            </li>
                        </div>
                </div>
                    </nav>
                <div class="col-md-2" style="z-index:2;">
                    <p style="font-size:16px;font-weight:bolder;">
                        Select page :
                        @Html.DropDownList("seletePageNow", new SelectListItem[] {
                        }, 
                        new
                        {
                            @class = "form-control"
                        })
                                                        
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="boxDownload" id="boxDownload" style="display: block;">
    <img class="imgDownload" src="~/images/loading.gif">
</div> 

<script>

    var dropArea = document.getElementById('dropArea');
    var fileInput = document.getElementById('fileInput');

    // Prevent default behavior (Prevent file from being opened)
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, preventDefaults, false);
        document.body.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    // Highlight drop area when file is dragged over it
    ['dragenter', 'dragover'].forEach(eventName => {
        dropArea.addEventListener(eventName, () => dropArea.classList.add('bg-light'), false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, () => dropArea.classList.remove('bg-light'), false);
    });

    // Handle dropped files
    dropArea.addEventListener('drop', handleDrop, false);

    function handleDrop(e) {
        var dt = e.dataTransfer;
        var files = dt.files;
        handleFiles(files);
    }

    function triggerFileInput() {
        fileInput.click();
     }

     fileInput.addEventListener('change', () => handleFiles(fileInput.files));    

     function handleFiles(files) {
        for (var i = 0; i < files.length; i++) {
            uploadFile(files[i], i);
        }
    }

    function uploadFile(file, index) {
        var formData = new FormData();
        formData.append('file', file);

        var xhr = new XMLHttpRequest();
        xhr.open('POST', '@Url.Action("UploadEncryptionExcel", "Excel")', true);

        var progressBarContainer = document.createElement('div');
        progressBarContainer.className = 'progress mb-3';
        var progressBar = document.createElement('div');
        progressBar.className = 'progress-bar';
        progressBar.role = 'progressbar';
        progressBar.style.width = '0%';
        progressBar.setAttribute('aria-valuenow', '0');
        progressBar.setAttribute('aria-valuemin', '0');
        progressBar.setAttribute('aria-valuemax', '100');
        progressBar.innerHTML = '0%';
        progressBarContainer.appendChild(progressBar);
        document.getElementById('progressBars').appendChild(progressBarContainer);

        xhr.upload.onprogress = function (event) {
            if (event.lengthComputable) {
                var percentComplete = Math.round((event.loaded / event.total) * 99);
                progressBar.style.width = percentComplete + '%';
                progressBar.setAttribute('aria-valuenow', percentComplete);
                progressBar.innerHTML = percentComplete + '%';
            }
        };

        xhr.onload = function () {
            if (xhr.status === 200) {
                progressBar.style.width = '100%';
                progressBar.innerHTML = 'Upload complete';
                progressBar.classList.add('bg-success');
                displayMessage('File uploaded successfully', 'alert-success');
            } else {
                progressBar.innerHTML = 'Upload failed';
                progressBar.classList.add('bg-danger');
                displayMessage('File upload failed. Please try again.', 'alert-danger');
            }
        };

        xhr.onerror = function () {
            progressBar.innerHTML = 'Upload error';
            progressBar.classList.add('bg-danger');
            displayMessage('An error occurred during the upload. Please try again.', 'alert-danger');
        };

        xhr.send(formData);
    }
    function displayMessage(message, alertClass) {
        var messageContainer = document.getElementById('message');
        messageContainer.innerHTML = `<div class="alert ${alertClass}" role="alert">${message}</div>`;
    }
</script>
  
<script>

    // document.getElementById("boxDownload").style.display = "none";
    $("#btnsearch").click(function (e) 
    {
         e.preventDefault();

             $("#boxDownload").show();

             setTimeout(function () 
             {
                 $("#CheckDate").submit();
             }, 100); // Use 0 milliseconds for minimal delay

     });
     $("#btnclear").click(function (e) {
        e.preventDefault();

        document.querySelector('[name="terminalId"]').value = "--";
        document.querySelector('[name="policy"]').value = "--";
        document.querySelector('[name="counterCode"]').value = "--";
        document.querySelector('[name="version"]').value = "--";

        $("#boxDownload").show();

        setTimeout(function () {
            $("#CheckDate").submit();
        }, 100);
       });      
         
</script>
<script> 
     $("#btnSEExp").click(function (e) {
        e.preventDefault();
        var terminalId = $("#terminalId").val();
        var countercode = $("#counterCode").val();
        var version = $("#version").val(); 
        var policy = $("#policy").val(); 

        var rptType = "xlsx";
        $.ajax({
            type: "POST",
            dataType: "json",
            data: {
                Terminal_ID: terminalId,
                Counter_Code : countercode,
                Version : version,
                Policy : policy
            },  
            url: '@Url.Action("Encryption_ExportExc", "Monitor")',
            success: function (result) {
                if (result.success == 'S') {

                    var url = '@Url.Action("Encryption_DownloadExportFile", "Monitor")'
                    window.location = '@Url.Action("Encryption_DownloadExportFile", "Monitor")/?rpttype=' + rptType;

                }
                else { alert(result.errstr); }
            },
            error: function (err) {
                alert('@ViewBag.ErrorMsg');
            }
        });
        $("#boxDownload").hide();
    });
</script>
<script>
    $(document).ready(function () 
     {
        // Target the specific table
        var table = $('#table-id'); 

        table.find('tr:eq(0)').prepend('<th>No</th>');

        var id = 0;
        var count = @Model.Count;

        table.find('tr:gt(0)').each(function () 
        {
            id++;
            if (count != 0) 
            {
                $(this).prepend('<td style="text-align:center;">' + id + '</td>');
            }
        });
    });  
    function EditButton(Terminal_SEQ, Terminal_ID, Terminal_NAME, Counter_Code, Version, Policy) {
        document.getElementById('Terminal_SEQ').value = Terminal_SEQ;
        document.getElementById('Terminal_ID').value = Terminal_ID;
        document.getElementById('Terminal_NAME').value = Terminal_NAME;
        document.getElementById('Counter_Code').value = Counter_Code;
        document.getElementById('Version').value = Version;
        document.getElementById('Policy').value = Policy; 
    }
    
</script>
<script>
    getPagination('#table-id', @ViewBag.maxRows);

    function getPagination(table, row) {
         var lastPage = 1;

         $('#maxRows')
             .on('change', function (evt) {
                 $('.paginationprev').html('');

                 lastPage = 1;
                 $('.pagination')
                     .find('li')
                     .slice(1, -1)
                     .remove();
                 var trnum = 0;
                 var maxRows = parseInt($(this).val());

                 if (maxRows == 5000) {
                     $('.pagination').hide();
                 } else {
                     $('.pagination').show();
                 }

                 var totalRows = $(table + ' tbody tr').length; 
                 $(table + ' tr:gt(0)').each(function () {
                     trnum++; 
                     if (trnum > maxRows) {
                         $(this).hide();
                     }
                     if (trnum <= maxRows) {
                         $(this).show();
                     } 
                 }); 
                 if (totalRows > maxRows) {
                     var pagenum = Math.ceil(totalRows / maxRows);

                     for (var i = 1; i <= pagenum;) {
                         $('.pagination #prev')
                             .before(
                                 '<li data-page="' +
                                 i +
                                 '">\
                                    <a style="color: #333333;">' +
                                 i++ +
                                 '\
                                 </li>'
                             )
                             .show();
                     } 
                     $('#back').show();



                 } else {
                     $('#back').hide();
                     $('#prev').hide();
                 }

                 $('.pagination [data-page="1"]').addClass('active'); 
                 $('.pagination li').on('click', function (evt) {
                     // on click each page
                     evt.stopImmediatePropagation();
                     evt.preventDefault();
                     var pageNum = $(this).attr('data-page'); 

                     var maxRows = parseInt($('#maxRows').val()); 



                     if (pageNum == 'prev') {
                         if (lastPage == 1) {
                             return;
                         }
                         pageNum = --lastPage;
                     }
                     if (maxRows < totalRows) {
                         if (pageNum == 'next') {
                             if (lastPage == $('.pagination li').length - 2) {
                                 return;
                             }
                             pageNum = ++lastPage;
                         }
                     }


                     lastPage = pageNum;
                     var trIndex = 0; 
                     $('.pagination li').removeClass('active'); 
                     $('.pagination [data-page="' + lastPage + '"]').addClass('active'); 
                     limitPagging();
                     $(table + ' tr:gt(0)').each(function () {
                         trIndex++;
                         if (
                             trIndex > maxRows * pageNum ||
                             trIndex <= maxRows * pageNum - maxRows
                         ) {
                             $(this).hide();
                         } else {
                             $(this).show();
                         } 
                     }); 

                     $('#seletePageNow').val(lastPage);
                 }); 

                 limitPagging();
                     $('#seletePageNow')
                         .find('option')
                         .remove()
                         .end();

                 var pagenum = Math.ceil(@Model.Count / parseInt($('#maxRows').val()));

                 var select = document.getElementById("seletePageNow");
                 for (var i = parseInt(pagenum); i > 0; i--) {
                     var option = document.createElement('option');
                     option.text = option.value = i;
                     select.add(option, 0);
                 }

                 $('#seletePageNow').val(lastPage);

             })
             .val(row)
             .change();

             $('#seletePageNow')
             .on('change', function (evt) {
                 // on click each page
                 evt.stopImmediatePropagation();
                 evt.preventDefault();
                 var maxRows = parseInt($('#maxRows').val()); 

                 var pageNum = $(this).val();

                 if (pageNum == null) pageNum = 1;

                 lastPage = pageNum;
                 var trIndex = 0; 
                 $('.pagination li').removeClass('active'); 
                 $('.pagination [data-page="' + lastPage + '"]').addClass('active');		
                 limitPagging();
                 $(table + ' tr:gt(0)').each(function () {                    
                     trIndex++; 
                     if (
                         trIndex > maxRows * pageNum ||
                         trIndex <= maxRows * pageNum - maxRows
                     ) {
                         $(this).hide();
                     } else {
                         $(this).show();
                     } 
                 }); 
             }).change();
          document.getElementById("boxDownload").style.display = "none";
     }

     function limitPagging() {

         if ($('.pagination li').length > 7) {
             if ($('.pagination li.active').attr('data-page') <= 3) {
                 $('.pagination li:gt(5)').hide();
                 $('.pagination li:lt(5)').show();
                 $('.pagination [data-page="next"]').show();
             } if ($('.pagination li.active').attr('data-page') > 3) {
                 $('.pagination li:gt(0)').hide();
                 $('.pagination [data-page="next"]').show();
                 for (let i = (parseInt($('.pagination li.active').attr('data-page')) - 2); i <= (parseInt($('.pagination li.active').attr('data-page')) + 2); i++) {
                     $('.pagination [data-page="' + i + '"]').show();

                 }
             }
         }
     }
</script>

        
