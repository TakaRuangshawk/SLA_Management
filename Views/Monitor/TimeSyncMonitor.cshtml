@{
    ViewData["Title"] = "TimeSync Monitor";
    string[] tableHeaders = new string[]
   {
    "No.",
    "TerminalID",
    "Terminal Name",
    "IP",
    "Serial No",
    "TimeSync Status",
    "Latest Sync Time"
    
   };

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* ---------- ปุ่มและ Dropdown ---------- */
    .btn-light {
        border: 1px solid darkgrey;
        border-radius: 10px;
    }

    .dropdown-toggle {
        border-radius: 10px;
    }

    .btnsearch {
        font-size: 18px;
    }

    #submit {
        position: relative;
        top: 50px;
        background: lightgray;
        border: 10px double white;
        border-radius: 20px;
        padding: 0px 10px;
    }

    #before-submit {
        display: flex;
        justify-content: center;
    }

    select.form-control {
        -webkit-appearance: button;
        border-radius: 10px;
    }

    input.form-control {
        -webkit-appearance: button;
        border-radius: 10px;
    }

    input:disabled {
        background-color: #f2f2f2;
    }

    .my-dropdown {
        width: 100%;
        height: 38px;
    }

    /* ---------- Header และ Layout ---------- */
    #header_search {
        top: 20px;
        position: relative;
        background-color: orange;
        border: solid;
        padding: 8px 40px;
        border-radius: 12px;
        font-weight: 700;
    }

    h {
        display: flex;
        justify-content: center;
    }

    .item {
        padding: 0px;
    }

    #main_search {
        margin-bottom: 50px;
        padding: 30px 0;
        margin-left: 50px;
        margin-right: 50px;
        border: 3px solid #888888;
        background-color: white;
        border-radius: 50px;
    }

    /* ---------- ตาราง ---------- */
    th {
        text-align: center;
        vertical-align: middle;
    }

    td {
        padding: 0.5em !important;
        vertical-align: middle;
    }

    .pagination li a {
        color: black !important;
    }

    /* ---------- Checkbox ---------- */
    .chkbox {
        text-align: left;
    }

    /* ---------- Download Animation Overlay ---------- */
    .boxDownload {
        background-color: rgba(255, 255, 255, 0.5);
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        pointer-events: none;
        z-index: 10;
    }

    .imgDownload {
        position: sticky;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>

<div class="content contentHeader">
    <div class="container w-auto containerHeader" style="padding-bottom: 0px;">
        <div class="row">
            <div class="col col-md-1">
            </div>
            <div class="col col-md-11">
                <a class="text-white fs-4" id="header_search">TimeSync Monitor</a>
            </div>
        </div>
        <div id="main_search" style="">
            @using (Html.BeginForm("TimeSyncMonitor", "Monitor", FormMethod.Get, new { id = "myForm" }))
            {
                <div class="row" style="margin-top: 45px;align-items:center;display: flex;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">
                    <div class="col-md-1" style="margin-right: 70px;">
                        <h>Bank : </h>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent; ">
                        <div class="form-group">
                            <!--		Show Numbers Of Rows 		-->
                            @Html.DropDownList("bankName", new SelectListItem[] {
                            new SelectListItem() { Text = "--", Value = "" },
                                                new SelectListItem() { Text = "BAAC", Value = "BAAC" },
                                                new SelectListItem() { Text = "ICBC", Value = "ICBC" }

                                                }, new
                        {
                            @class = "form-control dropdown"
                                                ,
                            @style = " border-radius: 10px;left: -6px",
                            @name = "state",

                            // @onchange = "submitForm()"

                        })

                    </div>
                </div>
                <input type="hidden" id="bankName" name="bankName" value="" />
                <div class="col-md-1">
                    <button type="button" data-toggle="modal" data-target="#WaitingModal" id="btnsearch" class="btn" style="padding:0px;" onclick="updateReportTable()">
                        <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Search" />
                    </button>
                </div>

            </div>



            <div class="row" style="margin-top: 20px; align-items:center; display: flex; justify-content:space-around ; padding:0vw 3vw 0vw 3vw; white-space:nowrap;">
                <!-- Terminal ID -->
                <div class="col-md-1">
                    <h>Terminal ID : </h>
                </div>
                <div class="item col-md-2">
                    <select class="form-control selectpicker subsearch" id="Filter_TerminalID" name="Filter_TerminalID" data-live-search="true">
                        <option value="">--</option>
                        @foreach (var item in ViewBag.CurrentTID)
                        {
                            <option value="@item.TERM_ID">@item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME</option>
                        }
                    </select>
                </div>
                <!-- Data DateTime -->
                <div class="col-md-1">
                    <h>Data Date : </h>
                </div>
                <div class="item col-md-2">
                    <input class="form-control subsearch" id="Filter_DataDate" name="Filter_DataDate" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                </div>
                <!-- Lot Type -->
                <div class="col-md-1">
                    <h>Status : </h>
                </div>
                <div class="item col-md-2">
                    <select class="form-control selectpicker subsearch" id="Filter_StatusType" name="Filter_StatusType">
                        <option value="">--</option>
                       
                    </select>
                </div>

               

                
            </div>

            <div class="row" style="padding:0vw 3vw 0vw 3vw; margin-top: 36px;">
                <div class="col-12" style="color: red; padding-left: 5px">
                    <label id="updateDateLabel">Latest Update Date : @ViewBag.LatestUpdateDate</label>
                </div>
            </div>
            <div class="row" style="padding:0vw 3vw 0vw 3vw;">
                <div class="col-12" style="color: red; padding-left: 5px;">
                    <label id="updatedByLabel">Latest Update By : @ViewBag.UpdatedBy</label>
                </div>
            </div>

            <div class="row justify-content-md-center" style="">


                <div class="col" id="before-submit">
                    <div id="submit">
                        <button type="button" data-toggle="modal" data-target="#WaitingModal" id="btnsearch" class="btn" style="padding:0px;" onclick="updateReportTable()">
                            <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Search" />
                        </button>
                        <button type="submit" id="btnclear" class="btn" data-toggle="tooltip" name="cmdButton" title="ล้างข้อมูล" value="Clear" style="padding:0px;border: 0px; background-color: transparent;">
                            <img src="~/images/icon_refresh.png" style="width: 40px; height: 38px" class="rounded-lg p-0" alt="Clear Data" />
                        </button>
                        <a id="btnSEExp" data-toggle="tooltip" title="Excel Export Report" style="cursor: pointer; padding:0px;">
                            <img src="~/images/icon_excel.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Excel Export Report" />
                        </a>
                        @*  <button type="button" id="btnInsert" class="btn" title="เพิ่มข้อมูล" data-toggle="modal" data-target="#InsertModal" style="padding:0px;border: 0px; background-color: transparent;">
                            <img src="~/images/icon_add.png" style="width: 150px; height: 50px" class="rounded-lg p-0" alt="Insert" />
                        </button> *@
                        <button type="button" id="btnInsert" class="btn text-white" title="เพิ่มข้อมูล" data-toggle="modal" data-target="#InsertModal"
                                style="padding: 0px 15px; border: 0px; background-color: #136f8d; font-size: 18px;height: 40px;">
                            Add files
                        </button>
                    </div>
                </div>

            </div>

                        }

        </div>
    </div>
</div>

<div class="container-fluid mb-5">
    


    <!-- ✅ เพิ่ม margin ล่างให้เว้นจาก footer -->
    <!-- Total Record Box -->
    <div class="row"
         style="background-color: #f8d5ad; width: fit-content; padding: 8px; margin-left: 3px; border-radius: 15px; font-size: 22px; font-weight: bold; margin-bottom: 15px; border:1px solid lightgrey;">
        <div class="col" style="display: flex; justify-content: center;">
            <a style="white-space:nowrap; align-items: center; display: flex;">Total Record:</a>
        </div>
        <div class="col" style="display: flex; justify-content: center;">
            <a id="totalRecordCount" style="white-space:nowrap; display: flex; align-items: center; background-color: rgba(255,255,255,1); padding: 10px 35px; border-radius: 10px;">
                @ViewBag.Records
            </a>
        </div>
    </div>

    <!-- Table -->
    <div class="table-responsive" style="overflow-x: hidden;">
        <table id="table-id" class="table table-striped custom-table">
            <thead>
                <tr>
                    @foreach (var head in tableHeaders)
                    {
                        <th scope="col" style="text-align:center">@head</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    var index = 1;
                    foreach (var Data in Model)
                    {
                        <tr>
                            <td style="text-align:center;">@index</td>
                            <td style="text-align:center;">@Data.terminalNo</td>
                            <td style="text-align:center;">@Data.lotType</td>
                            <td style="text-align:center;">@Data.cassette1000A</td>
                            <td style="text-align:center;">@Data.cassette1000B</td>
                            <td style="text-align:center;">@Data.cassette500</td>
                            <td style="text-align:center;">@Data.cassette100</td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" style="text-align:center;">NO DATA</td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination (placeholder) -->
        <div class="row">
            <div class="col colPagination" style="padding-top:10px; z-index:1;">
                <nav>
                    <div class="pagination">
                        <li data-page="prev" id="back" style="background-color:transparent;" title="Previous Page">
                            <img style="height:40px;width:auto;margin-right:10px;" src="~/images/arrow.png" />
                        </li>
                        <li data-page="next" id="prev" style="background-color:transparent;" title="Next Page">
                            <img style="height:40px;width:auto;margin-left:10px; transform:scaleX(-1);" src="~/images/arrow.png" />
                        </li>
                    </div>
                </nav>
            </div>
            <div class="col-md-2" style="z-index:2;">
                <p style="font-size:16px; font-weight:bolder;">
                    Select page :
                    @Html.DropDownList("seletePageNow", new SelectListItem[] { }, new { @class = "form-control" })
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="InsertModal" tabindex="-1" role="dialog" aria-labelledby="InsertModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="InsertModalLabel">📥 อัปโหลดไฟล์ TimeSync Log</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <form id="uploadForm" enctype="multipart/form-data">
                <div class="modal-body">

                    <!-- 🔹 Data_Date Picker -->
                    <div class="form-group" hidden>
                        <label for="DataDate">📅 วันที่ข้อมูล (Data Date)</label>
                        <input type="date" class="form-control" id="DataDate" name="DataDate" />
                    </div>
                    <!-- 🔹 File Upload แบบ Drag & Drop + Preview -->
                    <div class="form-group">
                        <label>📄 เลือกไฟล์ (.txt)</label>

                        <!-- Dropzone -->
                        <div id="dropZone" class="border border-secondary p-4 text-center rounded" style="background-color: #f9f9f9; cursor: pointer;">
                            👉 คลิกหรือลากไฟล์มาวางที่นี่ (รองรับ .txt)
                            <input type="file" id="FileUpload" name="FileUpload" accept=".txt" multiple style="display:none;" />
                        </div>

                        <!-- File list preview -->
                        <ul id="fileList" class="list-group mt-2"></ul>

                        <small class="form-text text-muted mt-2">คุณสามารถเลือกได้หลายไฟล์ และลบรายการก่อนอัปโหลดได้</small>
                    </div>


                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">❌ ยกเลิก</button>
                    <button class="btn btn-success mt-2" onclick="uploadFiles()">📤 อัปโหลด</button>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="boxDownload" id="boxDownload" style="display: none;">
    <img class="imgDownload" src="~/images/loading.gif">
</div>

<script>
        // ✅ รวม Script การอัปโหลด, แสดงผล, และ export
    $(document).ready(function () {
        const dropZone = document.getElementById("dropZone");
        const fileInput = document.getElementById("FileUpload");
        const fileList = document.getElementById("fileList");
        let selectedFiles = [];

        // 📂 อัปเดต preview รายชื่อไฟล์
        function updateFileList() {
            fileList.innerHTML = selectedFiles.length === 0
                ? "<li class='list-group-item text-muted'>ยังไม่มีไฟล์ที่เลือก</li>"
                : selectedFiles.map((file, i) =>
                    `<li class="list-group-item d-flex justify-content-between align-items-center">
                        ${file.name}
                        <button type="button" class="btn btn-sm btn-danger" onclick="removeFile(${i})">❌</button>
                     </li>`
                  ).join("");
        }

        window.removeFile = function(index) {
            selectedFiles.splice(index, 1);
            updateFileList();
        };

        fileInput.addEventListener("change", e => {
            selectedFiles = [...selectedFiles, ...Array.from(e.target.files)];
            updateFileList();
        });

        dropZone.addEventListener("click", () => fileInput.click());
        dropZone.addEventListener("dragover", e => {
            e.preventDefault();
            dropZone.classList.add("bg-light");
        });
        dropZone.addEventListener("dragleave", () => dropZone.classList.remove("bg-light"));
        dropZone.addEventListener("drop", e => {
            e.preventDefault();
            dropZone.classList.remove("bg-light");
            selectedFiles = [...selectedFiles, ...Array.from(e.dataTransfer.files)];
            updateFileList();
        });

        window.uploadFiles = function () {
            if (selectedFiles.length === 0) return alert("⚠️ กรุณาเลือกไฟล์อย่างน้อยหนึ่งไฟล์");

             const selectedBank = $("#bankName").val();
             if (!selectedBank)
        return alert("⚠️ กรุณาเลือกธนาคารก่อนทำการอัปโหลด");

            const formData = new FormData();
            selectedFiles.forEach(file => formData.append("files", file));
            formData.append("_bank", $("#bankName").val());


            $.ajax({
                url: '@Url.Action("UploadTimeSyncLogMultiple", "Monitor")',
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                beforeSend: function () {
                    $("#boxDownload").fadeIn();
                    $(".modal-footer button").prop("disabled", true);
                },
                success: function (response) {
                    alert(response?.message || "⚠️ Upload สำเร็จ แต่ไม่พบข้อความตอบกลับที่ถูกต้อง");
                    selectedFiles = [];
                    updateFileList();
                    $('#InsertModal').modal('hide');
                },
                error: () => alert("❌ อัปโหลดล้มเหลว กรุณาลองใหม่"),
                complete: function () {
                    updateReportTable();
                    $("#boxDownload").fadeOut();
                    $(".modal-footer button").prop("disabled", false);
                }
            });
        };

        window.updateReportTable = function (page = 1) {
            const terminalID = $("#Filter_TerminalID").val();
            
            const bankName = $("#bankName").val();
            const dataDate = $("#Filter_DataDate").val();

            const statusType = $("#Filter_StatusType").val();

            $("#boxDownload").fadeIn();

             $("#updateDateLabel").text("Latest Update Date : -");
             $("#updatedByLabel").text("Latest Update By : -");

            $.ajax({
                type: "GET",
                url: '@Url.Action("FetchTimeSyncStatus", "Monitor")',
                data: { terminalID, fromdate: dataDate,statusType, bankName, row: 50, page },
                dataType: "json",
                success: function (data) {
                    const { jsonData, currentPage, totalPages, totalCases } = data;
                    
                    $("#totalRecordCount").text(totalCases);
                    const tbody = $("#table-id tbody");
                    tbody.empty();

                    if (jsonData.length === 0) {
                        tbody.append(`<tr><td colspan='7' style='text-align:center;'>No data</td></tr>`);
                    } else {
                           
                        jsonData.forEach((item, index) => {
                            
                            const row = $(`<tr>
                                <td style="text-align:center">${(currentPage - 1) * 50 + index + 1}</td>
                          
                                <td style="text-align:center">${item.terminal_ID}</td>
                                <td style="text-align:center">${item.terminal_Name}</td>
                                <td style="text-align:center">${item.ip}</td>
                                <td style="text-align:center">${item.serial_No}</td>
                                <td style="text-align:center">${item.timeSync_Status}</td>
                                <td style="text-align:center">${formatDate( item.latest_Sync_Time)}</td>
                            `);
                            tbody.append(row);


                        });


                    }

                    $("#Filter_TerminalID").empty().append(`<option value="">--</option>`).selectpicker('refresh');
                    
                    $("#updateDateLabel").text("Latest Update Date : " + (data.latestUpdateDate || "-"));
                    $("#updatedByLabel").text("Latest Update By : " + (data.updatedBy || "-"));

                    const selectPage = $("#seletePageNow").empty();
                    for (let i = 1; i <= totalPages; i++) {
                        selectPage.append(`<option value="${i}" ${i === currentPage ? "selected" : ""}>${i}</option>`);
                    }
                    selectPage.off("change").on("change", () => updateReportTable(parseInt(selectPage.val())));

                    $("#back").toggle(currentPage > 1).off("click").on("click", () => updateReportTable(currentPage - 1));
                    $("#prev").toggle(currentPage < totalPages).off("click").on("click", () => updateReportTable(currentPage + 1));

                    

                    const terminalDropdown = $("#Filter_TerminalID").empty().append(`<option value="">--</option>`);
                    data.terminalDropdown.forEach(item =>
                        terminalDropdown.append(`<option value="${item.terM_ID}">${item.terM_SEQ} : ${item.terM_ID} : ${item.terM_NAME}</option>`)
                    );
                    terminalDropdown.selectpicker('refresh').val(terminalID).selectpicker('refresh');


                    const statusTypeDropdown = $("#Filter_StatusType").empty().append(`<option value="">--</option>`);
                    data.statusTypeDropdown.forEach(item => statusTypeDropdown.append(`<option value="${item}">${item}</option>`));
                    statusTypeDropdown.selectpicker('refresh').val(statusType).selectpicker('refresh');




                    $("#Filter_DataDate").val(dataDate);
                    window.scrollTo(0, 0);
                },
                error: err => {
                    console.log("Error:", err);
                    $("#table-id tbody").html(`<tr><td colspan='9' style='text-align:center;'>ERROR</td></tr>`);
                },
                complete: () => $("#boxDownload").fadeOut()
            });
        };

        window.extractNumber = function (value) {
            if (!value || value === '-' || value.trim() === '') return 0;
            const match = value.match(/\d+/);
            return match ? parseInt(match[0], 10) : 0;
        };

        $("#btnSEExp").on("click", function () {
            const terminalID = $("#Filter_TerminalID").val();
            const statusType = $("#Filter_StatusType").val();
            const dataDate = $("#Filter_DataDate").val();
            const bankName = $("#bankName").val();

            const url = `${'@Url.Action("ExportTimeSyncLogToExcel", "Monitor")'}?terminalID=${terminalID}&statusType=${statusType}&fromdate=${dataDate}&bankName=${bankName}`;
            window.open(url, "_blank");
        });
    });


    function formatDate(dateInput) {

          
        const cleaned = dateInput.replace("T", " ").replace("Z", "");

    

      return cleaned;
    }
            




</script>


