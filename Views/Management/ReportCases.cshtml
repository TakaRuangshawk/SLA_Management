@{
    ViewData["Title"] = "Report Case";
    string[] tableHeaders = new string[]
    {
    "No.",
    "Action ",
    "CaseErrorNo",
    "TerminalID",
    "Place Install",
    "Issue Name",
    "Date Infrom",
    "Status Name",
    };

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .btn-light {
        border: 1px solid darkgrey;
        border-radius: 10px;
    }

    h {
        display: flex;
        justify-content: center;
    }

</style>
<style>
    .chkbox {
        text-align: left;
    }

    .my-dropdown {
        width: 100%;
        height: 38px;
    }

    input:disabled {
        background-color: #f2f2f2;
    }

    .btnsearch {
        font-size: 18px;
    }

    select.form-control {
        -webkit-appearance: button;
    }

    input.form-control {
        -webkit-appearance: button;
        border-radius: 10px;
    }


    #header_search {
        top: 20px;
        position: relative;
        background-color: orange;
        border: solid;
        padding: 8px 40px 8px 40px;
        border-radius: 12px;
        font-weight: 700;
    }

    .item {
        padding: 0px;
    }

    #submit {
        position: relative;
        top: 50px;
        background: lightgray;
        border: 10px double white;
        border-radius: 20px;
        padding: 0px 10px 0px 10px;
    }

    #before-submit {
        display: flex;
        justify-content: center;
    }

    #main_search {
        margin-bottom: 50px;
        padding: 30px 0;
        margin-left: 50px;
        margin-right: 50px;
        border: 3px solid #888888;
        background-color: white;
        border-radius: 50px;
    }

    .dropdown-toggle {
        border-radius: 10px;
    }

    th {
        text-align: center;
        vertical-align: middle;
    }

    td {
        padding: 0.5em !important;
        vertical-align: middle;
    }

    .pagination li a {
        color: black !important;
    }
</style>

<div class="content contentHeader">
    <div class="container w-auto containerHeader" style="padding-bottom: 0px;">
        <div class="row">
            <div class="col col-md-1">
            </div>
            <div class="col col-md-11">
                <a class="text-white fs-4" id="header_search">Report Cases</a>
            </div>
        </div>
<div id="main_search" style="">
            @using (Html.BeginForm("ReportCases", "Management", FormMethod.Get, new { id = "myForm" }))
    {

        <div class="row" style="margin-top: 45px;align-items:center;    display: flex;justify-content: space-around;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">

            <div class="col-md-1" style="">
                <h>Terminal No : </h>
            </div>

            <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                <div class="form-group">
                    <select class="selectpicker form-control subsearch" id="Terminal_ID" name="Terminal_ID" data-live-search="true">

                        <option data-tokens="" value="">--</option>
                        @foreach (var item in ViewBag.CurrentTID)
                        {
                            if (@item.TERM_ID != @ViewBag.TermID)
                            {
                                <option value=@item.TERM_ID data-tokens=@item.TERM_ID>@item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME</option>
                            }
                            else
                            {
                                <option value=@item.TERM_ID data-tokens=@item.TERM_ID selected>@item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME</option>

                            }
                        }

                    </select>
                </div>
            </div>

            <div class="col col-md-1" style="">
                <h>Issue Name : </h>
            </div>

            <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                <div class="dropdown bootstrap-select form-control subsearch">
                    <select class="form-control selectpicker subsearch" id="Issue_Name" name="Issue_Name">
                        <option value="">--</option>
                        @foreach (var item in ViewBag.Issue_Name)
                        {
                            if (@item.Issue_Name != @ViewBag.Issue_Name_Current)
                            {
                                <option value=@item.Issue_Name data-tokens=@item.Issue_Name>@item.Issue_Name </option>
                            }
                            else
                            {
                                <option value=@item.Issue_Name data-tokens=@item.Issue_Name selected>@item.Issue_Name </option>

                            }
                        }
                    </select>
                </div>
            </div>

            <div class="col col-md-1" style="">
                <h>Status Name : </h>
            </div>

            <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                <div class="dropdown bootstrap-select form-control subsearch">
                    <select class="form-control selectpicker subsearch" id="Status_Name" name="Status_Name">
                        <option value="">--</option>
                        @foreach (var item in ViewBag.Status_Name)
                        {
                            if (@item.Status_Name != @ViewBag.Status_Name_Current)
                            {
                                <option value=@item.Status_Name data-tokens=@item.Status_Name>@item.Status_Name </option>
                            }
                            else
                            {
                                <option value=@item.Status_Name data-tokens=@item.Status_Name selected>@item.Status_Name </option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="row" style="margin-top: 45px;align-items:center;    display: flex;justify-content: space-around;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">

            <div class="col-md-1">
                <label>From Date : </label>

            </div>

            <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <input class="form-control subsearch" id="fromdate" name="fromdate" placeholder="yyyy-mm-dd" type="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")">
            </div>

            <div class="col-md-1">
                <label>To Date : </label>
            </div>
            <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <input class="form-control subsearch" id="todate" name="todate" placeholder="yyyy-mm-dd" type="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-1">
                @*<h>Rows : </h>*@
            </div>

            <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                @*<div class="form-group">
                    <div class="dropdown bootstrap-select form-control subsearch">
                        <select class="form-control selectpicker subsearch" id="maxRows" name="maxRows">
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="500">500</option>
                        </select>
                    </div>

                </div>*@
            </div>
        </div>
        @if (Context.Session.GetString("Role") != "User")
        {
            <div class="row justify-content-md-center" style="padding: 50px 50px 0px 50px;">
                <div id="dropArea" class="border p-5 text-center">
                    <p>Drag and drop your Excel files here</p>
                    <p>or</p>
                    <input type="file" id="fileInput" multiple hidden />
                    <button type="button" class="btn btn-primary" onclick="triggerFileInput()">Browse Files</button>
                </div> 
                <div id="progressBars" class="mt-3"></div>
                <div id="message" class="mt-3"></div>
            </div>
            <div class="row" style="padding:0vw 3vw 0vw 3vw;">
                <div class="col-12" style="color: red; padding-left: 5px">
                    <label id="updateDateLabel">Latest Update Date : @ViewBag.LatestUpdateDate</label>
                </div>
            </div>
            <div class="row" style="padding:0vw 3vw 0vw 3vw;">
                <div class="col-12" style="color: red; padding-left: 5px;">
                    <label id="updatedByLabel">Latest Update By : @ViewBag.UpdatedBy</label>
                </div>
            </div>
        }
        @if (Context.Session.GetString("Role") == "User")
        {
            <div class="row" style="padding:0vw 3vw 0vw 4vw;">
                <div class="col-12" style="color: red; padding: 30px 0px 0px 20px;">
                    <label>Latest Update Date : @ViewBag.LatestUpdateDate</label>
                </div>
            </div> 
            <div class="row" style="padding:0vw 3vw 0vw 4vw;">
                <div class="col-12" style="color: red; padding-left: 20px">
                    <label>Latest Update By : @ViewBag.UpdatedBy</label>
                </div>
            </div>
        }
        
        <div class="row justify-content-md-center" style="">


            <div class="col" id="before-submit">
                <div id="submit">
                            <button type="button" data-toggle="modal" data-target="#WaitingModal" id="btnsearch" class="btn" style="padding:0px;" onclick="updateReportCasesTable()">
                        <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Search" />
                    </button>
                    <button type="submit" id="btnclear" class="btn" data-toggle="tooltip" name="cmdButton" title="ล้างข้อมูล" value="Clear" style="padding:0px;border: 0px; background-color: transparent;">
                        <img src="~/images/icon_refresh.png" style="width: 40px; height: 38px" class="rounded-lg p-0" alt="Clear Data" />
                    </button>
                    <a id="btnSEExp" data-toggle="tooltip" title="Excel Export Report" style="cursor: pointer; padding:0px;">
                        <img src="~/images/icon_excel.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Excel Export Report" />
                    </a>
                </div>
            </div>

        </div>

    }
        </div>
    </div>
</div>
<div class="container">

    <div class="table-responsive" style="overflow-x: hidden;">
        <table id="table-id" class="table table-striped custom-table">
            <thead>
                <tr>
                    @{
                        foreach (var head in tableHeaders)
                        {
                            <th scope="col" style="text-align:center; white-space:nowrap;"> @head </th>
                        }
                    }
                </tr>
            </thead>

            <tbody>
                <tr>
                    <td colspan="8" style="text-align: center;"> NO DATA </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="reportCaseModal" tabindex="-1" role="dialog" aria-labelledby="reportCaseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reportCaseModalLabel">Report Case Details</h5>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="CaseErrorNo">Case No</label>
                                <input type="text" class="form-control editable" id="CaseErrorNo" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="TerminalID">Terminal ID</label>
                                <input type="text" class="form-control editable" id="TerminalID" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="PlaceInstall">Place Install</label>
                                <input type="text" class="form-control editable" id="PlaceInstall" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="IssueName">Issue Name</label>
                                <input type="text" class="form-control editable" id="IssueName" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="DateInform">Date Inform</label>
                                <input type="text" class="form-control editable" id="DateInform" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="StatusName">Status Name</label>
                                <input type="text" class="form-control editable" id="StatusName" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="BranchName">Branch Name</label>
                                <input type="text" class="form-control editable" id="BranchName" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Repair1">Repair 1</label>
                                <input type="text" class="form-control editable" id="Repair1" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Repair2">Repair 2</label>
                                <input type="text" class="form-control editable" id="Repair2" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Repair3">Repair 3</label>
                                <input type="text" class="form-control editable" id="Repair3" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Repair4">Repair 4</label>
                                <input type="text" class="form-control editable" id="Repair4" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Repair5">Repair 5</label>
                                <input type="text" class="form-control editable" id="Repair5" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="IncidentNo">Incident No</label>
                                <input type="text" class="form-control editable" id="IncidentNo" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="DateClosePb">Date Close Pb</label>
                                <input type="text" class="form-control editable" id="DateClosePb" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="TypeProject">Type Project</label>
                                <input type="text" class="form-control editable" id="TypeProject" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="UpdateDate">Update Date</label>
                                <input type="text" class="form-control editable" id="UpdateDate" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="UpdateBy">Update By</label>
                                <input type="text" class="form-control editable" id="UpdateBy" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Remark">Remark</label>
                                <input type="text" class="form-control editable" id="Remark">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="updateRemarkBtn" class="btn btn-primary">Update Remark</button>
            </div>
        </div>
    </div>
</div>


<script>
    var dropArea = document.getElementById('dropArea');
    var fileInput = document.getElementById('fileInput');

    // Prevent default behavior (Prevent file from being opened)
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, preventDefaults, false);
        document.body.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    // Highlight drop area when file is dragged over it
    ['dragenter', 'dragover'].forEach(eventName => {
        dropArea.addEventListener(eventName, () => dropArea.classList.add('bg-light'), false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, () => dropArea.classList.remove('bg-light'), false);
    });

    // Handle dropped files
    dropArea.addEventListener('drop', handleDrop, false);

    function triggerFileInput() {
        // Trigger file input click
        fileInput.click();
    }

    fileInput.addEventListener('change', () => handleFiles(fileInput.files));

    function handleDrop(e) {
        var dt = e.dataTransfer;
        var files = dt.files;
        handleFiles(files);
    }

    function handleFiles(files) {
        for (var i = 0; i < files.length; i++) {
            uploadFile(files[i], i);
        }
    }

    function uploadFile(file, index) {
        if (!file.name.endsWith('.xlsx')) 
        {
            alert('Invalid file type. Only .xlsx files are supported.');
            return; 
        }
        var formData = new FormData();
        formData.append('file', file);

        var xhr = new XMLHttpRequest();
        xhr.open('POST', '@Url.Action("UploadExcel", "Excel")', true);

        var progressBarContainer = document.createElement('div');
        progressBarContainer.className = 'progress mb-3';
        var progressBar = document.createElement('div');
        progressBar.className = 'progress-bar';
        progressBar.role = 'progressbar';
        progressBar.style.width = '0%';
        progressBar.setAttribute('aria-valuenow', '0');
        progressBar.setAttribute('aria-valuemin', '0');
        progressBar.setAttribute('aria-valuemax', '100');
        progressBar.innerHTML = '0%';
        progressBarContainer.appendChild(progressBar);
        document.getElementById('progressBars').appendChild(progressBarContainer);

        xhr.upload.onprogress = function (event) {
            if (event.lengthComputable) {
                var percentComplete = Math.round((event.loaded / event.total) * 100);
                progressBar.style.width = percentComplete + '%';
                progressBar.setAttribute('aria-valuenow', percentComplete);
                progressBar.innerHTML = percentComplete + '%';
            }
        };

        xhr.onload = function () {
            if (xhr.status === 200) {
                progressBar.innerHTML = 'Upload complete';
                progressBar.classList.add('bg-success');
                displayMessage('File uploaded successfully', 'alert-success');
            } else {
                progressBar.innerHTML = 'Upload failed';
                progressBar.classList.add('bg-danger');
                displayMessage('File upload failed. Please try again.', 'alert-danger');
            }
        };

        xhr.onerror = function () {
            progressBar.innerHTML = 'Upload error';
            progressBar.classList.add('bg-danger');
            displayMessage('An error occurred during the upload. Please try again.', 'alert-danger');
        };

        xhr.send(formData);
    }

    function displayMessage(message, alertClass) {
        var messageContainer = document.getElementById('message');
        messageContainer.innerHTML = `<div class="alert ${alertClass}" role="alert">${message}</div>`;
    }
    function updateReportCasesTable() {
        var terminalID = $("#Terminal_ID").val();
        var placeInstall = $("#Place_Install").val();
        var issueName = $("#Issue_Name").val();
        var fromdate = $("#fromdate").val();
        var todate = $("#todate").val();
        var statusName = $("#Status_Name").val();



        $.ajax({
            type: "GET",
            url: '@Url.Action("FetchReportCases", "Management")',
            data: {
                terminalID: terminalID,
                placeInstall: placeInstall,
                issueName: issueName,
                fromdate: fromdate,
                todate: todate,
                statusName: statusName,
            },
            dataType: "json",
            success: function (data) {
                var latestUpdateDate = data.latestUpdateDate || "-";
                var latestUpdatedBy = data.updatedBy || "-";

                $("#updateDateLabel").text(`Latest Update Date : ${latestUpdateDate}`);
                $("#updatedByLabel").text(`Latest Update By : ${latestUpdatedBy}`);

                var jsondata = data.jsonData;
                var pages = data.page;
                var jsondata = data.jsonData;
                var totalPages = data.totalPages;
                var currentPage = data.currentPage;
                $("#table-id tbody").empty(); 
                console.log(data);
                if (jsondata.length === 0) {
                    var noDataRow = $("<tr>").append($("<td colspan='8' style='text-align:center;'>").text("No data"));
                    $("#table-id tbody").append(noDataRow);
                } else {
                    $.each(jsondata, function (index, item) {
                        var noColumn = index + 1;  // Calculate the No. column value
                        var editButton = $("<td>").css("text-align", "center").append(
                            $("<img>").addClass("btn text-dark edit-btn").attr({
                                src: "/non-outsource-operation/images/button_view.png",
                                style: "height: 35px;width: auto;cursor: pointer;border-radius: 40px; letter-spacing: 2px;",
                                "data-case-error-no": item.caseErrorNo,
                                "data-terminal-id": item.terminalID,
                                "data-place-install": item.placeInstall,
                                "data-issue-name": item.issueName,
                                "data-date-inform": item.dateInform,
                                "data-status-name": item.statusName,
                                "data-branch-name": item.branchName,
                                "data-repair1": item.repair1,
                                "data-repair2": item.repair2,
                                "data-repair3": item.repair3,
                                "data-repair4": item.repair4,
                                "data-repair5": item.repair5,
                                "data-incident-no": item.incidentNo,
                                "data-date-close-pb": item.dateClosePb,
                                "data-type-project": item.typeProject,
                                "data-update-date": item.updateDate,
                                "data-update-by": item.updateBy,
                                "data-remark": item.remark,
                                "data-toggle": "modal",
                                "data-target": "#reportCaseModal"
                            })
                        );
                        var row = $("<tr>");
                        row.append($("<td>").css("text-align", "center").text(noColumn));  // No. column
                        row.append(editButton);
                        row.append($("<td>").css("text-align", "center").text(item.caseErrorNo));
                        row.append($("<td>").css("text-align", "center").text(item.terminalID));
                        row.append($("<td>").css("text-align", "center").text(item.placeInstall));
                        row.append($("<td>").css("text-align", "center").text(item.issueName));
                        row.append($("<td>").css("text-align", "center").text(item.dateInform));
                        row.append($("<td>").css("text-align", "center").text(item.statusName));

                        $("#table-id tbody").append(row);
                        window.scrollTo(0, 0);
                    });
                }
                // Bind the click event after the rows have been added
                $(".edit-btn").click(function () {
                    $("#CaseErrorNo").val($(this).data("case-error-no"));
                    $("#TerminalID").val($(this).data("terminal-id"));
                    $("#PlaceInstall").val($(this).data("place-install"));
                    $("#IssueName").val($(this).data("issue-name"));
                    $("#DateInform").val($(this).data("date-inform"));
                    $("#StatusName").val($(this).data("status-name"));
                    $("#BranchName").val($(this).data("branch-name"));
                    $("#Repair1").val($(this).data("repair1"));
                    $("#Repair2").val($(this).data("repair2"));
                    $("#Repair3").val($(this).data("repair3"));
                    $("#Repair4").val($(this).data("repair4"));
                    $("#Repair5").val($(this).data("repair5"));
                    $("#IncidentNo").val($(this).data("incident-no"));
                    $("#DateClosePb").val($(this).data("date-close-pb"));
                    $("#TypeProject").val($(this).data("type-project"));
                    $("#UpdateDate").val($(this).data("update-date"));
                    $("#UpdateBy").val($(this).data("update-by"));
                    $("#Remark").val($(this).data("remark"));
                });
            },
            error: function (error) {
                console.log("Error: " + JSON.stringify(error));
            }
        });
    }




    function editReportCase(caseErrorNo, terminalID, placeInstall, issueName, dateInform, statusName, branchName, repair1, repair2, repair3, repair4, repair5, incidentNo, dateClosePb, typeProject, updateDate, updateBy, remark) {
        $("#CaseErrorNo").val(caseErrorNo);
        $("#TerminalID").val(terminalID);
        $("#PlaceInstall").val(placeInstall);
        $("#IssueName").val(issueName);
        $("#DateInform").val(dateInform);
        $("#StatusName").val(statusName);
        $("#BranchName").val(branchName);
        $("#Repair1").val(repair1);
        $("#Repair2").val(repair2);
        $("#Repair3").val(repair3);
        $("#Repair4").val(repair4);
        $("#Repair5").val(repair5);
        $("#IncidentNo").val(incidentNo);
        $("#DateClosePb").val(dateClosePb);
        $("#TypeProject").val(typeProject);
        $("#UpdateDate").val(updateDate);
        $("#UpdateBy").val(updateBy);
        $("#Remark").val(remark);
    }
    $(document).ready(function () {
        $("#btnSEExp").click(function () {
            var terminalID = $("#TerminalID").val();
            var placeInstall = $("#PlaceInstall").val();
            var issueName = $("#IssueName").val();
            var fromdate = $("#fromdate").val();
            var todate = $("#todate").val();
            var statusName = $("#StatusName").val();

            $.ajax({
                type: "GET",
                url: '@Url.Action("ExportReportCasesToExcel", "Management")',
                data: {
                    terminalID: terminalID,
                    placeInstall: placeInstall,
                    issueName: issueName,
                    fromdate: fromdate,
                    todate: todate,
                    statusName: statusName
                },
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (blob, status, xhr) {
                    var filename = "";
                    var disposition = xhr.getResponseHeader('Content-Disposition');
                    if (disposition && disposition.indexOf('attachment') !== -1) {
                        var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                        var matches = filenameRegex.exec(disposition);
                        if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                    }

                    var link = document.createElement('a');
                    var url = window.URL.createObjectURL(blob);
                    link.href = url;
                    link.download = filename || 'ReportCases.xlsx';
                    document.body.appendChild(link);
                    link.click();

                    setTimeout(function () {
                        window.URL.revokeObjectURL(url);
                        link.remove();
                    }, 100);
                },
                error: function (error) {
                    console.log("Error: " + JSON.stringify(error));
                }
            });
        });
    });
    $(document).ready(function () {
        // Handle update button click
        $("#updateRemarkBtn").click(function () {
            var caseErrorNo = $("#CaseErrorNo").val();  // Get case number to identify the row in the database
            var remark = $("#Remark").val();  // Get the new remark

            // Send AJAX request to update the remark in the database
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateRemark", "Management")',   // Change to your actual backend URL
                data: {
                    caseErrorNo: caseErrorNo,
                    remark: remark
                },
                success: function (response) {
                    alert('Remark updated successfully!');
                    $('#reportCaseModal').modal('hide');  // Close the modal
                    updateReportCasesTable();
                },
                error: function (error) {
                    alert('Error updating remark: ' + error.responseText);
                }
            });
        });
    });

</script>
