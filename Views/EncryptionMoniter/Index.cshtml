@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Encryption Moniter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<style>
    .btn-light {
        border: 1px solid darkgrey;
        border-radius: 10px;
    }

    h {
        display: flex;
        justify-content: center;
    }

</style>
<style>
    .chkbox {
        text-align: left;
    }

    .my-dropdown {
        width: 100%;
        height: 38px;
    }

    input:disabled {
        background-color: #f2f2f2;
    }

    .btnsearch {
        font-size: 18px;
    }

    select.form-control {
        -webkit-appearance: button;
    }

    input.form-control {
        -webkit-appearance: button;
        border-radius: 10px;
    }


    #header_search {
        top: 20px;
        position: relative;
        background-color: orange;
        border: solid;
        padding: 8px 40px 8px 40px;
        border-radius: 12px;
        font-weight: 700;
    }

    .item {
        padding: 0px;
    }

    #submit {
        position: relative;
        top: 50px;
        background: lightgray;
        border: 10px double white;
        border-radius: 20px;
        padding: 0px 10px 0px 10px;
    }

    #before-submit {
        display: flex;
        justify-content: center;
    }

    #main_search {
        margin-bottom: 50px;
        padding: 30px 0;
        margin-left: 50px;
        margin-right: 50px;
        border: 3px solid #888888;
        background-color: white;
        border-radius: 50px;
    }

    .dropdown-toggle {
        border-radius: 10px;
    }

    th {
        text-align: center;
        vertical-align: middle;
    }

    td {
        padding: 0.5em !important;
        vertical-align: middle;
    }

    .pagination li a {
        color: black !important;
    }
</style>


<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
</head>


<div class="content contentHeader">
    <div class="container w-auto containerHeader" style="padding-bottom: 0px;">
        <div class="row">
            <div class="col col-md-1">
            </div>
            <div class="col col-md-11">
                <a class="text-white fs-4" id="header_search">Encryption Moniter</a>
            </div>
        </div>



        <div id="main_search" >
           @*  <form method="post" action="EncryptionMoniter/GetDeviceEncryption" onsubmit="SubmitSearch(this);"> *@

                <div class="row" style="margin-top: 45px;align-items:center; display: flex;justify-content: space-around;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">

                    <div class="col-md-1" style="">
                        <h>Terminal No : </h>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <div class="form-group">
                            <select class="selectpicker form-control subsearch" id="serial_no" name="serial_no" data-live-search="true">

                                <option data-tokens="" value="">--</option>
                                @foreach (var item in ViewBag.CurrentTID)
                                {
                                   
                                    <option value=@item.TERM_SEQ data-tokens=@item.TERM_SEQ>@item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME</option>
                                   
                                }

                            </select>
                        </div>
                    </div>

                    <div class="col-md-1" style="">
                        <h>Encryption Version : </h>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <div class="form-group">
                            <select class="selectpicker form-control subsearch" id="encryption_version" name="encryption_version" data-live-search="true">

                                <option data-tokens="" value="">--</option>
                                @foreach (var item in ViewBag.EncryptionVersion)
                                {
                                    
                                        <option value=@item.ToString() data-tokens=@item.ToString()>@item.ToString()</option>
                                    
                                   
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-1" style="">
                        <h>Encryption Status : </h>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <div class="form-group">
                            <!--		Show Numbers Of Rows 		-->
                            <div class="dropdown bootstrap-select form-control subsearch">
                                <select class="form-control selectpicker subsearch" id="encryption_status" name="encryption_status">
                                    <option value="">--</option>
                                    <option value="True">True</option>
                                    <option value="False">False</option>

                                </select>
                            </div>

                        </div>
                    </div>


                </div>

                <div class="row" style="margin-top: 45px;align-items:center;    display: flex;justify-content: space-around;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">

                    <div class="col-md-1">
                        <label>From Date : </label>

                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <input class="form-control subsearch" id="fromdate" name="fromdate" placeholder="yyyy-mm-dd" type="Date">
                    </div>

                    <div class="col-md-1">
                        <label>To Date : </label>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <input class="form-control subsearch" id="todate" name="todate" placeholder="yyyy-mm-dd" type="Date">
                    </div>

                    <div class="col col-md-1" style="">
                        <h>Agent Status : </h>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <div class="form-group">
                            <!--		Show Numbers Of Rows 		-->
                            <div class="dropdown bootstrap-select form-control subsearch">
                                <select class="form-control selectpicker subsearch" id="agent_status" name="agent_status">
                                    <option value="">--</option>
                                    <option value="True">True</option>
                                    <option value="False">False</option>

                                </select>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top: 45px;align-items:center;    display: flex;justify-content: space-around;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">

                <div class="col col-md-1" style="">
                    <h>Terminal Type : </h>
                </div>
                <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                    <div class="form-group">
                        <!--		Show Numbers Of Rows 		-->
                        <div class="dropdown bootstrap-select form-control subsearch">
                            <select class="form-control selectpicker subsearch" id="terminal_type" name="terminal_type">


                                <option data-tokens="" value="">--</option>
                                @foreach (var item in ViewBag.TerminalType)
                                {

                                    <option value=@item.deviceType data-tokens=@item.deviceType>@item.deviceTypeName</option>

                                }
                                
                            </select>
                        </div>

                    </div>
                </div>
                   




                    <div class="col col-md-1" style="">
                        <h>Rows : </h>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                        <div class="form-group">
                            <!--		Show Numbers Of Rows 		-->
                            <div class="dropdown bootstrap-select form-control subsearch">
                                <select class="form-control selectpicker subsearch" id="maxRows" name="maxRows">
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                    <option value="500">500</option>
                                </select>
                            </div>

                        </div>
                    </div>


                    <div class="col col-md-1" style="">
                    <h>Sort : </h>
                    </div>
                    <div class="item col-md-2" style="border-color:#ced4da; background-color: transparent;">
                         <div class="form-group">
                            <!--		Show Numbers Of Rows 		-->
                            <div class="dropdown bootstrap-select form-control subsearch">
                                <select class="form-control selectpicker subsearch" id="sort" name="sort">
                                <option value="">--</option>
                                <option value="Terminal No">Terminal No</option>
                                <option value="Branch No">Branch No</option>
                                <option value="Serial No">Serial No</option>
                                <option value="Status">Status</option>
                                </select>
                            </div>

                        </div>
                    </div>


                    


                </div>

                <div class="row justify-content-md-center" style="">


                    <div class="col" id="before-submit">
                        <div id="submit">
                        <button type="button" onclick="SearchData();" data-toggle="modal" data-target="#WaitingModal" id="btnsearch" class="btn" style="padding:0px;">
                                <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Search" />
                            </button>

                        <button type="submit" onclick="ClearSearchData();" id="btnclear" class="btn" data-toggle="tooltip" name="cmdButton" title="ล้างข้อมูล" value="Clear" style="padding:0px;border: 0px; background-color: transparent;">
                                <img src="~/images/icon_refresh.png" style="width: 40px; height: 38px" class="rounded-lg p-0" alt="Clear Data" />
                            </button>


                        <a id="btnSEExp" onclick="DownloadExcel();" data-toggle="tooltip" title="Excel Export Report" style="cursor: pointer; padding:0px;">
                                <img src="~/images/icon_excel.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Excel Export Report" />
                            </a>
                        </div>
                    </div>

                </div>
            @* </form> *@
          

        </div>



    </div>

</div>



<div class="container-fluid">
    <div class="row" style="background-color: #f8d5ad;width: fit-content;padding: 8px;margin-left: 3px;border-radius: 15px;font-size: 22px;font-weight: bold;margin-bottom: 15px; border:1px solid lightgrey;">

        <div class="col" style="display: flex;justify-content: center;">
            <a style="white-space:nowrap;align-items: center;display: flex;">Total Terminal:</a>
        </div>
        <div class="col" style="display: flex;justify-content: center;">
            <a style="white-space:nowrap;display: flex;align-items: center;background-color: rgba(255,255,255,1);padding: 10px 35px 10px 35px;border-radius: 10px;" ;="">
                <span id="recordCount"></span>
            </a>
        </div>
    </div>
    <div class="table-responsive" style="overflow-x: hidden;">
        <table id="table-id" class="table table-striped custom-table">
            <thead>
                <tr>
                    <th scope="col" style="text-align:center">Row</th>
                    <th scope="col" style="text-align:center">Serial No</th>
                    <th scope="col" style="text-align:center">Terminal Id</th>
                    <th scope="col" style="text-align:center">Terminal Name</th>
                    <th scope="col" style="text-align:center">Encryption Version</th>
                    <th scope="col" style="text-align:center">Encryption Status</th>
                    <th scope="col" style="text-align:center">Agent Status</th>
                    <th scope="col" style="text-align:center">Update Datetime</th>

                </tr>
            </thead>

            <tbody>
            </tbody>


        </table>


        <div class="row">
            <div class="col colPagination" style="padding-top:10px;z-index:1;">

                <nav>
                    <div class="pagination">
                        <ul style="display:flex;">
                            <li data-page="prev" id="prev" style="" >
                                <a style="color: #7a7a7a;">
                                    <img src="~/images/arrow.png" width="127" height="53" alt="Logo" align="left" style="border: 0; width: 34px;height: 34px;">
                                </a>
                            </li>
                            <li id="pageButtonsContainer"></li>
                            <li data-page="next" id="next" style="">
                                <a style="color: #7a7a7a;">
                                    <img src="~/images/arrow.png" width="127" height="53" alt="Logo" align="left" style="border: 0;width: 34px;height: 34px;transform: scaleX(-1);">
                                </a>
                            </li>
                        </ul>
                    </div>
                </nav>
            </div>
            <div class="col-md-2" style="z-index:2;">
                <p style="font-size:16px;font-weight:bolder;">
                    Select page :
                    @Html.DropDownList("page", new SelectListItem[] {

                                }, new
                                {
                                    @class = "form-control",
                                    onchange = "ChangePage(this.value)"
                                })
                </p>
            </div>
        </div>

    </div>
</div>

<script>

    
    function generatePageButtons(pages, max_row, currentpage) {
        var pageButtonsContainer = $("#pageButtonsContainer");
        pageButtonsContainer.empty();

        var maxButtons = 5;
        var startPage = Math.max(1, currentpage - Math.floor(maxButtons / 2));
        var endPage = Math.min(startPage + maxButtons - 1, pages);
        var page = $("#page").val();
        var prevDiv = document.getElementById("prev");
        var nextDiv = document.getElementById("next");
        for (var i = startPage; i <= endPage; i++) {
            var button = $("<a>").text(i).click( function () {
                $("#page").val($(this).text()); // Set #page value
           
                SubmitPage($(this).text(), max_row);
                
            });
            button.css({
                "display": "inline-flex",
                "align-items": "center",
                "justify-content": "center"
            });
            // Highlight the current page button
            if (i == currentpage) {
                button.addClass("current-page");
            }

            pageButtonsContainer.append(button);
        }
        
        if (pages >= 1) {

            $("#page").empty();
            for (var i = 1; i <= pages; i++) {
                var option = $('<option>', {
                    value: i,
                    text: i
                });
                if (i == currentpage) {
                    option.prop("selected", true);
                }
                $("#page").append(option);

            }
        }
        else {
            $("#page").empty();
            var option = $('<option>', {
                value: 1,
                text: 1
            });
            $("#page").append(option);

        }
        var pageNext = parseInt(currentpage) + 1;
        var pagePrev = parseInt(currentpage) - 1;
       
        prevDiv.onclick =
            function(){
                SubmitPage(pagePrev, max_row);
                
            };
        nextDiv.onclick =
            function () {
                SubmitPage(pageNext, max_row);
                
            };


        prevDiv.style.visibility = "hidden";
        nextDiv.style.visibility = "hidden";

        if ((pages != 0) && pageNext <= pages) {
            nextDiv.style.visibility = "visible";
        }

        if ((pages != 0) && pagePrev > 0) {
            prevDiv.style.visibility = "visible";
        }

        
        // if ((nextDiv < 1 || page == null) && pages > 1) {
            
        //     nextDiv.style.visibility = "visible";

        // }
        // else if ((currentpage == pages) && pages > 1) {
        //     prevDiv.style.visibility = "visible";
           
        // }
        // else {
        //     prevDiv.style.visibility = "visible";
        //     nextDiv.style.visibility = "visible";

        // }
       
        
    }
    function generateTable(jsondata,maxRow,pageIndex) {
        $("#table-id tbody").empty();
        if (jsondata.length === 0) {

            var noDataRow = $("<tr>").append($("<td colspan='12' style='text-align:center;'>").text("No data"));
            $("#table-id tbody").append(noDataRow);
        } else {
            $.each(jsondata, function (index, item) {
               
                var row = $("<tr>");
                row.append($("<td>").css("text-align", "center").text((index + 1) + ((pageIndex - 1) * maxRow)));
                
                row.append($("<td>").css("text-align", "center").text(item.serial_no));
                row.append($("<td>").css("text-align", "center").text(item.terminal_id));
                row.append($("<td>").css("text-align", "center").text(item.terminal_name));
                row.append($("<td>").css("text-align", "center").text(item.encryption_version));

                row.append($("<td>").css("text-align", "center").text(item.encryption_status));
                row.append($("<td>").css("text-align", "center").text(item.agent_status));

               
                // Get the current date object
                let date = new Date(item.update_datetime);

                // Get the year, month, day, hour, minute, and second
                let year = date.getFullYear();
                let month = date.getMonth() + 1; // Month is zero-based
                let day = date.getDate();
                let hour = date.getHours();
                let minute = date.getMinutes();
                let second = date.getSeconds();

                // Pad each component with a leading zero if necessary
                year = year.toString().padStart(2, "0");
                month = month.toString().padStart(2, "0");
                day = day.toString().padStart(2, "0");
                hour = hour.toString().padStart(2, "0");
                minute = minute.toString().padStart(2, "0");
                second = second.toString().padStart(2, "0");

                // Concatenate the components with slashes and spaces
                let dateString = year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second;

                row.append($("<td>").css("text-align", "center").text(dateString));

                $("#table-id tbody").append(row);
                window.scrollTo(0, 0);
            });
        }
    }
    // updateTable("search");
    // $("#btnSEExp").click(function (e) {
    //     e.preventDefault();
    //     var terminalno = $("#TermID").val();
    //     var terminalseq = $("#terminalseq").val();
    //     var terminaltype = $("#terminaltype").val();
    //     var connencted = $("#connencted").val();
    //     var servicetype = $("#servicetype").val();
    //     var countertype = $("#countertype").val();
    //     var fromdate = $("#fromdate").val();
    //     var todate = $("#todate").val();
    //     var status = $("#Status").val();
    //     var rptType = "xlsx";
    //     $.ajax({
    //         type: "POST",
    //         dataType: "json",
    //         data: {
    //             terminalno: terminalno,
    //             terminalseq: terminalseq,
    //             terminaltype: terminaltype,
    //             connencted: connencted,
    //             servicetype: servicetype,
    //             countertype: countertype,
    //             status: status,
    //             fromdate: fromdate,
    //             todate: todate
    //         },
    //         contentType: 'application/json; charset=utf-8',
    //         url: '@Url.Action("Inventory_ExportExc", "Maintenance")',
    //         success: function (result) {
    //             if (result.success == 'S') {
    //                 var url = '@Url.Action("Inventory_DownloadExportFile", "Maintenance")'
    //                 window.location = '@Url.Action("Inventory_DownloadExportFile", "Maintenance")/?rpttype=' + rptType;
    //             }
    //             else { alert(result.errstr); }
    //         },
    //         error: function (err) {
    //             alert('@ViewBag.ErrorMsg');
    //         }
    //     });
    // });


   
</script>



<script>
   
    var max_row = 0;
    var page_index = 0;
    function ChangePage(val) {
       
        SubmitPage(val, max_row);

    }
    function SearchData() {
        var paramater = {
            serial_no: document.getElementById('serial_no').value,
            encryption_version: document.getElementById('encryption_version').value,
            encryption_status: document.getElementById('encryption_status').value,
            fromdate: document.getElementById('fromdate').value,
            todate: document.getElementById('todate').value,
            agent_status: document.getElementById('agent_status').value,
            maxRows: document.getElementById('maxRows').value,
            terminal_type: document.getElementById('terminal_type').value,
            sort: document.getElementById('sort').value
        };
        SubmitSearch(paramater);

    }
    function ClearSearchData() {
        document.querySelector('serial_no').value = "--";
        // document.querySelector('encryption_version').selectedIndex = 0;
        // document.getElementById('encryption_status').selectedIndex = "";
        // document.getElementById('fromdate').value = "";
        // document.getElementById('todate').value = "";
        // document.getElementById('agent_status').selectedIndex = "";
        // document.getElementById('maxRows').selectedIndex = 500;
        // document.getElementById('sort').selectedIndex = "";
        alert(" Test ");

    }
    function DownloadExcel() {
        ExportRecordtoExcel();

    }
    async function SubmitSearch(paramater) {
        
        //const formData = new FormData(oFormElement);
        
        const url = '@Url.Action("GetDeviceEncryption", "EncryptionMoniter")' + '?' +
            new URLSearchParams(paramater);
        
        
       
        try {
            
            const response = await fetch(url, {
                method: 'GET',
                headers: {
                    'Accept': 'application / json',
                    'Content-Type': 'application/json'
                    
                },
                
            });
            
            if (response.ok) {
                var res = response.json();
                
                res.then((data) => {
                    
                    
                    max_row = 50; 
                    
                    page_index = Math.ceil(data.sumtotal / max_row);
                    
                    generateTable(data.devices, 50, 1);
                    $('#recordCount').text(data.sumtotal);
                    generatePageButtons(page_index,max_row, 1);
                    
                    
                });
                
                return true;
               
            }
            
           
        } catch (error) {
            
            console.log(error);
            return false;
        }
    }
    async function SubmitPage(page,maxRow) {
        try {
            
            const url = '@Url.Action("GetPage", "EncryptionMoniter")'+ '?' +
                    new URLSearchParams({
                page: page,
                max_row: max_row

            });
           
           
            const response = await fetch(url , {
                method: 'GET',
                headers: {
                    "Content-Type": "application/json"
                },
                
            });

            if (response.ok) {
                var res = response.json();

                res.then((data) => {
                    generateTable(data, max_row, page);
                    
                    generatePageButtons(page_index, max_row, page);

                });
                return true;

            }


        } catch (error) {
            console.log(error);
            return false;
        }
    }
    async function ExportRecordtoExcel() {
        try {

            const response = await fetch('@Url.Action("ExportRecordtoExcel", "EncryptionMoniter")', {
                method: 'POST',

                //responseType: "blob"
            });
            if (response.ok) {

                let res = response.blob();

                res.then(blob => {


                    const date = new Date();

                    let currentDay = String(date.getDate()).padStart(2, '0');

                    let currentMonth = String(date.getMonth() + 1).padStart(2, "0");

                    let currentYear = date.getFullYear();
                    let currentDate = `${currentYear}-${currentMonth}-${currentDay}`;


                    // let sert = "";
                    // if (dataExport.term_id != "" && dataExport.term_id != null) {
                    //     sert += "_" + dataExport.term_id;
                    // } else {
                    //     if (dataExport.row != 0) {
                    //         sert += "_ALL"
                    //     }

                    // }

                    // if (dataExport.toDateTime != "" && dataExport.toDateTime != null) {
                    //     sert += "_" + dataExport.toDateTime;
                    // }
                    // if (dataExport.forDateTime != "" && dataExport.forDateTime != null) {
                    //     sert += "_" + dataExport.forDateTime;
                    // }


                    var url = window.URL.createObjectURL(blob);

                    anchor = document.createElement("a");
                    anchor.href = url;
                    anchor.download = 'EncryptionMoniter_' + currentDate;
                    anchor.click();
                    window.URL.revokeObjectURL(url);
                    document.removeChild(anchor);

                    //window.location.assign(url);
                });
            }
            else {
                // Handle the error if the export was unsuccessful
                throw new Error("Export failed with status " + response.status);
            }

        } catch (error) {
            console.log(error);
        }


    }
</script>

