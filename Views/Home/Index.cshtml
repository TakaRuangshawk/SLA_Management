@model List<SLA_Management.Models.OperationModel.slatracking>
@{
    ViewData["Title"] = "Home Page";

}
<style>
    #banner-fv{
        background-color: #225789;
        color: white;
        font-size: 20px;
        border-radius: 15px;
        margin-top: 15px;
        
    }

    #banner-so {
        background-color: #027913;
        color: white;
        font-size: 20px;
        border-radius: 15px;
    }
    #comlogbox {
        text-align: center;
        display: flex !important;
        justify-content: center;
        align-items: flex-start;
        padding-left: 10px;
        font-weight: 700;
        border-radius: 15px 15px 15px 15px;
        background-color: rgb(255,255,255);
        color: black;
        flex-wrap: wrap;
        font-size: 35px;
        height: 75px;
        align-content: center;
        border-style: ridge;
        border-color:gray;
        border:outset;
    }
    .ds-flex-center{
        display:flex;
        justify-content:center;
    }
    .ds-flex-spacearound{
        display:flex;
        justify-content:space-around;
    }
    .row{
        margin:auto;
    }
    table{
        background-color:white;    
    }

    .custom-table-home thead tr, .custom-table thead th {
        border-top: none;
        border-bottom: none !important;
        color: #000;
        background-color: #8fcaf4;
        font-size: 1vw;
        border-color: antiquewhite;
        border: 3px solid lightgray;
    }

    .custom-table-home tbody th, .custom-table tbody td {
        color: black;
        padding-bottom: 20px;
        padding-top: 20px;
        font-weight: 300;
        transition: .3s all ease;
        border: 2px solid lightgray;
    }
    @@media (max-width: 1199px) {
        #row-pic-welcome {
            display: none;
        }
    }
    @@media (min-width: 1200px) { 
        #row-pic-welcome{
            height: auto;
            display: flex;
            align-content: center;
            justify-content: flex-end;
        }

        .sla-tracking-row{
            padding-left:130px;
        }
    }
</style>

<div class="text-center" id="bg">

    <div class="container-fluid">
        
        <div class="row" style="">
            <div class="col-md-12 col-xl-6" id="main-left">

            </div>
            <div class="col-md-12 col-xl-6">
                <div id="row-pic-welcome" class="row" style="">
                    <div class="col-12" style="display: flex;justify-content: flex-end;">
                        <img id="" src="~/images/Pic_Welcome.png" alt="Logo" style="height: auto;width: 100%;max-width: 447px;">
                    </div>
                </div>
                <div class="row" style="justify-content: flex-end;">
                    <div class="col-12">
                        <img src="~/images/PIC_Computer.png" alt="Logo" align="right" style="height:auto;width:100%;max-width:33vw;">
                    </div>
                </div>
            </div>
        </div>

    </div>
 
</div>

<script>

    function updateDateTime() {
      var now = new Date();
      var datetimeElement = document.getElementById('datetime');
      var dateElement = document.getElementById('date');
      var timeElement = document.getElementById('time');
      var year = now.getFullYear();
      var month = String(now.getMonth() + 1).padStart(2, '0');
      var day = String(now.getDate()).padStart(2, '0');
      var hours = String(now.getHours()).padStart(2, '0');
      var minutes = String(now.getMinutes()).padStart(2, '0');
      var seconds = String(now.getSeconds()).padStart(2, '0');

        //var formattedDateTime = day + '-' + month + '-' + year + '      ' + hours + ':' + minutes + ':' + seconds;
        var formatDate = day + '-' + month + '-' + year;
        var formatTime = hours + ':' + minutes + ':' + seconds;
      //datetimeElement.textContent = formattedDateTime;
        dateElement.textContent = formatDate;
        timeElement.textContent = formatTime;
        }

    // Update datetime initially
    updateDateTime();
    setInterval(updateDateTime, 1000);
    // Update datetime every second
    let refreshTimer;
    function handleRefreshTimeChange() {
        var selectedValue = document.getElementById("refreshTime").value;
        localStorage.setItem("refreshTime", selectedValue);
        clearTimeout(refreshTimer);
        console.log(refreshTimer);
        //schedulePageRefresh(selectedValue);
    }
  
 
        const refreshCheckbox = document.getElementById("refreshCheckbox");
        const refreshTimeSelect = document.getElementById("refreshTime");

        // Load checkbox state and time from localStorage if available
        const savedCheckboxState = localStorage.getItem("checkboxState");
        const savedRefreshTime = localStorage.getItem("refreshTime");

        if (savedCheckboxState === "checked") {
            refreshCheckbox.checked = true;
        }

        if (savedRefreshTime) {
            refreshTimeSelect.value = savedRefreshTime;
        }
       
        if (refreshCheckbox.checked){
            schedulePageRefresh(refreshTimeSelect.value);
        }
    
        refreshCheckbox.addEventListener("change", function () {
            if (refreshCheckbox.checked) {
                localStorage.setItem("checkboxState", "checked");
                const selectedTime = refreshTimeSelect.value;
                localStorage.setItem("refreshTime", selectedTime);
                schedulePageRefresh(selectedTime);
            } else {
                localStorage.removeItem("checkboxState");
                localStorage.removeItem("refreshTime");
                clearTimeout(refreshTimer);
            }
        });
        refreshTimeSelect.addEventListener("change", function () {
            var selectedValue = document.getElementById("refreshTime").value;
            console.log(selectedValue);
            localStorage.setItem("refreshTime", selectedValue);
            clearTimeout(refreshTimer);
            schedulePageRefresh(selectedValue);
        });
        

        function schedulePageRefresh(timeInSeconds) {
            const milliseconds = timeInSeconds * 1000;
            refreshTimer = setTimeout(function () {
                location.reload();
            }, milliseconds);
        }

</script>
