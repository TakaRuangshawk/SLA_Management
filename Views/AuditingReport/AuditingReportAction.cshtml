@model PagedList.IPagedList<SLA_Management.Models.ReportModel.fv_system_users>
@{
    ViewData["Title"] = "Auditing Report";
    string[] tableHeaders = new string[]
                                                                                                    {

    "System",
    "Account Name",
    "User Name",
    "Last Login ",
    "Status ",


                                                                                                            };

    Layout = "~/Views/Shared/_Layout.cshtml";
}





<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Table #6</title>
</head>

<style>
    .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
        width: 526px;
        margin-left: -2px;
    }

    .bootstrap-select > .dropdown-toggle {
        border-color: #ced4da;
        background-color: transparent;
        position: relative;
        width: 100%;
        text-align: right;
        white-space: nowrap;
        display: -webkit-inline-box;
        display: -webkit-inline-flex;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-box-align: center;
        -webkit-align-items: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: justify;
        -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
        justify-content: space-between;
    }

    select.form-control {
        -webkit-appearance: button;
    }

    .item {
        padding: 0px;
    }

    #submit {
        position: relative;
        top: 50px;
        background: lightgray;
        border: 10px double white;
        border-radius: 20px;
        padding: 0px 10px 0px 10px;
    }

    #main_search {
        margin-bottom: 50px;
        padding: 30px 3vw 30px 3vw;
        margin-left: 50px;
        margin-right: 50px;
        border: 3px solid #888888;
        background-color: white;
        border-radius: 50px;
    }

    #before-submit {
        display: flex;
        justify-content: center;
    }

    #header_search {
        top: 20px;
        position: relative;
        background-color: orange;
        border: solid;
        padding: 8px 40px 8px 40px;
        border-radius: 12px;
        font-weight: 700;
    }

    .dropdown-toggle {
        border-radius: 10px;
    }

    .show-tick {
        width: -webkit-fill-available !important;
    }

    th {
        text-align: center;
    }

</style>


<div class="content contentHeader">
    <div class="container w-auto containerHeader" style="padding-bottom: 0px;">
        <div class="row">
            <div class="col col-md-1">
            </div>
            <div class="col col-md-4">
                <a class="text-white fs-4" id="header_search">Auditing Report</a>
            </div>
        </div>


        <div id="main_search">
            @using (Html.BeginForm("AuditingReportAction", "AuditingReport", FormMethod.Get, null))
            {
                <div class="row" style="margin-top: 45px;align-items:center;    display: flex;justify-content: space-between;padding:0vw 3vw 0vw 3vw;white-space:nowrap;">

                    <div class="col-1" style="">
                        <h>System : </h>
                    </div>
                    <div class="col-2" style="padding:0px;">
                        <div class="form-group">
                            <!--		Show Numbers Of Rows 		-->
                            @Html.DropDownList("systemType", new SelectListItem[] {
                        new SelectListItem(){ Text="Feelview", Value = "Feelview"  },
                        new SelectListItem(){ Text="SECOne", Value = "SECOne"  }

                                        }, new
                                        {
                                            @class = "form-control dropdown"
                                     ,
                                            @style = " border-radius: 10px;",
                                            @name = "state"

                                        })

                        </div>
                    </div>

                    <div class="col-1" style="">
                        <h>Rows : </h>
                    </div>

                    <div class="col-2" style="padding:0px;">
                        <div class="form-group">
                            <!--		Show Numbers Of Rows 		-->
                            @Html.DropDownList("maxRows", new SelectListItem[] {
                        new SelectListItem(){ Text="50", Value = "50" },
                        new SelectListItem(){ Text="100", Value = "100"  },
                        new SelectListItem(){ Text="500", Value = "500"  },
                        new SelectListItem(){ Text="1000", Value = "1000"  }
                                        }, new
                                        {
                                            @class = "form-control dropdown"
                                     ,
                                            @style = " border-radius: 10px;",
                                            @name = "state"

                                        })

                        </div>
                    </div>

                </div>

                <div class="row">

                    <div class="col" id="before-submit">
                        <div id="submit">
                            <button type="submit" id="btnsearch" title="ค้นหาข้อมูล" class="btn" style="padding:0px;">
                                <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Search" />
                            </button>

                            <button type="submit" id="btnclear" class="btn" data-toggle="tooltip" name="cmdButton" title="ล้างข้อมูล" value="Clear" style="padding:0px;border: 0px; background-color: transparent;">
                                <img src="~/images/icon_delete.png" style="width: 50px; height: 50px" class="rounded-lg p-0" alt="Clear Data" />
                            </button>


                            <a id="btnSEExp" data-toggle="tooltip" title="Excel Export Report" style="cursor: pointer; padding:0px;">
                                <img src="~/images/icon_excel.png" style="width: 50px; height: 50px" class="rounded-lg  p-0" alt="Excel Export Report" />
                            </a>                          
                        </div>
                    </div>
                </div>
            }



        </div>

    </div>

    <div class="container-fluid">
        <div class="row" style="background-color: #f8d5ad;width: fit-content;padding: 8px;margin-left: 3px;border-radius: 15px;font-size: 22px;font-weight: bold;margin-bottom: 15px; border:1px solid lightgrey;">

            <div class="col" style="display: flex;justify-content: center;">
                <a style="white-space:nowrap;align-items: center;display: flex;">Total Record:</a>
            </div>
            <div class="col" style="display: flex;justify-content: center;">
                <a style="white-space:nowrap;display: flex;align-items: center;background-color: rgba(255,255,255,1);padding: 10px 35px 10px 35px;border-radius: 10px;" ;="">@ViewBag.Records</a>
            </div>
        </div>
        <div class="table-responsive" style="overflow-x: hidden;">
            <table id="table-id" class="table table-striped custom-table">
                <thead>
                    <tr>
                        @{
                            foreach (var head in tableHeaders)
                            {
                                <th scope="col" style="text-align:center"> @head </th>
                            }
                        }

                    </tr>
                </thead>

                <tbody>
                    @{
                        if (Model != null)
                        {
                            foreach (var Data in Model)
                            {
                                <tr>

                                    <td style="text-align:center;"> @Data.System</td>
                                    <td style="text-align:center;"> @Data.AccountName</td>
                                    <td style="text-align:center;"> @Data.UserName </td>
                                    <td style="text-align:center;"> @Data.LastLoginDateTime.ToString("dd-MM-yyyy HH:mm:ss")</td>
                                    <td style="text-align:center;"> @Data.Status </td>
                                </tr>
                            }

                        }
                        if (Model.Count == 0)
                        {

                        <td colspan="7" style="text-align: center;"> NO DATA </td>
                        }
                    }
                </tbody>


            </table>


            <div class="row">
                <div class="col colPagination" style="padding-top:10px;z-index:1;">

                    <nav>
                        <div class="pagination">
                            <li data-page="prev" id="back" style="background-color:transparent;">

                                <img style="height:40px;width:auto;margin-right:10px;" src="~/images/arrow.png" />
                            </li>
                            <!--	Here the JS Function Will Add the Rows -->
                            <li data-page="next" id="prev" style="background-color:transparent;">
                                <img style="height:40px;width:auto;margin-left:10px;transform:scaleX(-1)" src="~/images/arrow.png" />
                            </li>

                        </div>
                    </nav>
                </div>
                <div class="col-md-2" style="z-index:2;">
                    <p style="font-size:16px;font-weight:bolder;">
                        Select page :
                        @Html.DropDownList("seletePageNow", new SelectListItem[] {

                                        }, new
                                        {
                                            @class = "form-control"
                                        })
                    </p>
                </div>
            </div>

        </div>

    </div>






</div>

<script>
    getPagination('#table-id', @ViewBag.maxRows);


    function getPagination(table, row) {
        var lastPage = 1;

        $('#maxRows')
            .on('change', function (evt) {
                $('.paginationprev').html('');

                lastPage = 1;
                $('.pagination')
                    .find('li')
                    .slice(1, -1)
                    .remove();
                var trnum = 0;
                var maxRows = parseInt($(this).val());

                if (maxRows == 5000) {
                    $('.pagination').hide();
                } else {
                    $('.pagination').show();
                }

                var totalRows = $(table + ' tbody tr').length; // numbers of rows
                $(table + ' tr:gt(0)').each(function () {
                    // each TR in  table and not the header
                    trnum++; // Start Counter
                    if (trnum > maxRows) {
                        // if tr number gt maxRows

                        $(this).hide(); // fade it out
                    }
                    if (trnum <= maxRows) {
                        $(this).show();
                    } // else fade in Important in case if it ..
                }); //  was fade out to fade it in
                if (totalRows > maxRows) {
                    // if tr total rows gt max rows option
                    var pagenum = Math.ceil(totalRows / maxRows); // ceil total(rows/maxrows) to get ..
                    //	numbers of pages

                    for (var i = 1; i <= pagenum;) {
                        // for each page append pagination li
                        $('.pagination #prev')
                            .before(
                                '<li data-page="' +
                                i +
                                '">\
                                                                                   <a style="color: #333333;">' +
                                i++ +
                                '\
                                                                                            </li>'
                            )
                            .show();
                    } // end for i
                    $('#back').show();



                } else {
                    $('#back').hide();
                    $('#prev').hide();
                }

                // end if row count > max rows
                $('.pagination [data-page="1"]').addClass('active'); // add active class to the first li
                $('.pagination li').on('click', function (evt) {
                    // on click each page
                    evt.stopImmediatePropagation();
                    evt.preventDefault();
                    var pageNum = $(this).attr('data-page'); // get it's number

                    var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option



                    if (pageNum == 'prev') {
                        if (lastPage == 1) {
                            return;
                        }
                        pageNum = --lastPage;
                    }
                    if (maxRows < totalRows) {
                        if (pageNum == 'next') {
                            if (lastPage == $('.pagination li').length - 2) {
                                return;
                            }
                            pageNum = ++lastPage;
                        }
                    }


                    lastPage = pageNum;
                    var trIndex = 0; // reset tr counter
                    $('.pagination li').removeClass('active'); // remove active class from all li
                    $('.pagination [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                    // $(this).addClass('active');					// add active class to the clicked
                    limitPagging();
                    $(table + ' tr:gt(0)').each(function () {
                        // each tr in table not the header
                        trIndex++; // tr index counter
                        // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                        if (
                            trIndex > maxRows * pageNum ||
                            trIndex <= maxRows * pageNum - maxRows
                        ) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        } //else fade in
                    }); // end of for each tr in table


                    $('#seletePageNow').val(lastPage);




                }); // end of on click pagination list

                limitPagging();
    @*Set value in seletePage box*@
                    $('#seletePageNow')
                        .find('option')
                        .remove()
                        .end();


                var pagenum = Math.ceil(@Model.Count / parseInt($('#maxRows').val()));


                                                                          var select = document.getElementById("seletePageNow");
                for (var i = parseInt(pagenum); i > 0; i--) {
                    var option = document.createElement('option');
                    option.text = option.value = i;
                    select.add(option, 0);
                }

                $('#seletePageNow').val(lastPage);

            })
            .val(row)
            .change();



        $('#seletePageNow')
            .on('change', function (evt) {
                // on click each page
                evt.stopImmediatePropagation();
                evt.preventDefault();
                var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option

                var pageNum = $(this).val();

                if (pageNum == null) pageNum = 1;





                lastPage = pageNum;
                var trIndex = 0; // reset tr counter
                $('.pagination li').removeClass('active'); // remove active class from all li
                $('.pagination [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                // $(this).addClass('active');					// add active class to the clicked
                limitPagging();
                $(table + ' tr:gt(0)').each(function () {
                    // each tr in table not the header
                    trIndex++; // tr index counter
                    // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                    if (
                        trIndex > maxRows * pageNum ||
                        trIndex <= maxRows * pageNum - maxRows
                    ) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    } //else fade in
                }); // end of for each tr in table
            }).change();



        // end of on select change

        // END OF PAGINATION
    }


    function limitPagging() {
        // alert($('.pagination li').length)

        if ($('.pagination li').length > 7) {
            if ($('.pagination li.active').attr('data-page') <= 3) {
                $('.pagination li:gt(5)').hide();
                $('.pagination li:lt(5)').show();
                $('.pagination [data-page="next"]').show();
            } if ($('.pagination li.active').attr('data-page') > 3) {
                $('.pagination li:gt(0)').hide();
                $('.pagination [data-page="next"]').show();
                for (let i = (parseInt($('.pagination li.active').attr('data-page')) - 2); i <= (parseInt($('.pagination li.active').attr('data-page')) + 2); i++) {
                    $('.pagination [data-page="' + i + '"]').show();

                }

            }
        }
    }



    $(function () {
        // Just to append id number for each row
        $('table tr:eq(0)').prepend('<th> No </th>');

        var id = 0;
        var count = @Model.Count;

        $('table tr:gt(0)').each(function () {
            id++;
            if (count != 0) {
                $(this).prepend('<td style="text-align:center;">' + id + '</td>');
            }

        });
    });



    $("#btnSEExp").click(function (e) {
        e.preventDefault();

        var expParams = "xlsx" + '|' + $("#frDate").val() + '|' + $("#toDate").val()
            + '|' + "xlsx";
        var rptType = "xlsx";
        $.ajax({
            type: "POST",
            dataType: "json",
            data: '{ "exparams" : "' + expParams + '" }',
            contentType: 'application/json; charset=utf-8',
            url: '@Url.Action("AuditReport_ExportExc", "AuditingReport")',
            success: function (result) {
                if (result.success == 'S') {
                    var url = '@Url.Action("DownloadExportFile", "AuditingReport")'
                    window.location = '@Url.Action("DownloadExportFile", "AuditingReport")/?rpttype=' + rptType;
                }
                else { alert(result.errstr); }
            },
            error: function (err) {
                alert('@ViewBag.ErrorMsg');
            }
        });
    });

</script>