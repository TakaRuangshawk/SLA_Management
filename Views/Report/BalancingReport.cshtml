
@{
    ViewData["Title"] = "Balancing Report ";
  

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Table #6</title>
</head>

<style>
    /* 🔽 Dropdown & Form Controls */
    .bootstrap-select > .dropdown-toggle,
    .dropdown-toggle {
        border-color: #ced4da;
        background-color: transparent;
        position: relative;
        width: 100%;
        text-align: right;
        white-space: nowrap;
        display: inline-flex;
        align-items: center;
        justify-content: space-between;
        border-radius: 10px;
    }

    .form-control {
        border-radius: 10px;
    }

    select.form-control,
    input.form-control {
        -webkit-appearance: button;
        border-radius: 10px;
    }

    input:disabled {
        background-color: #f2f2f2;
    }

    .form-group {
        margin-bottom: 1em;
    }

    /* ✅ Input Layout & Buttons */
    .btnsearch {
        font-size: 18px;
    }

    .chkbox {
        text-align: left;
    }

    .my-dropdown {
        width: 100%;
        height: 38px;
    }

    .item {
        padding: 0px;
    }

    /* 🔎 Header & Search Box */
    #header_search {
        top: 20px;
        position: relative;
        background-color: orange;
        border: solid;
        padding: 8px 40px;
        border-radius: 12px;
        font-weight: 700;
    }

    #main_search {
        margin: 30px 50px 50px 50px;
        padding: 30px 0;
        border: 3px solid #888888;
        background-color: white;
        border-radius: 50px;
    }

    #submit {
        position: relative;
        top: 50px;
        background: lightgray;
        border: 10px double white;
        border-radius: 20px;
        padding: 0px 10px;
    }

    #before-submit {
        display: flex;
        justify-content: center;
    }

    /* 📋 Table Styling */
    .table-container {
        position: relative;
        width: 100%;
        overflow-x: auto;
    }

    .dashboard-table {
        border: 1px solid #ddd;
        border-radius: 6px;
    }

    .dashboard-table .table th,
    .dashboard-table .table td {
        min-width: 180px;
        vertical-align: middle !important;
    }

    .dashboard-table .table th:first-child,
    .dashboard-table .table td:first-child {
        min-width: 140px;
        padding-left: 30px;
    }

    td {
        padding: 0.2em !important;
    }

    th {
        text-align: center;
    }

    h {
        white-space: nowrap;
    }

    /* ⏳ Loading Overlay */
    .boxDownload {
        background-color: rgba(255, 255, 255, 0.5);
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        pointer-events: none;
        z-index: 9999; /* อยู่บนสุดกว่าทุก modal */
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .imgDownload {
        position: sticky;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>


<div class="content contentHeader">
    <div class="container w-auto containerHeader" style="padding-bottom: 0px;">
        <div class="row">
            <div class="col col-md-1"></div>
            <div class="col col-md-11">
                <a class="text-white fs-4" id="header_search">Balancing Report</a>
            </div>
        </div>

        <div id="main_search">
            @using (Html.BeginForm("BalancingReport", "Report", FormMethod.Get, new { id = "balancingForm" }))
            {
                <!-- Row 1: Bank + Search -->
                <div class="row" style="margin-top: 45px; align-items: center; display: flex; padding: 0vw 3vw; white-space: nowrap;">
                    <div class="col-md-1" style="margin-right: 49px;">
                        <h>Bank : </h>
                    </div>
                    <div class="item col-md-2">
                        <div class="form-group">
                            @Html.DropDownList("bankName", new List<SelectListItem>
                            {
                                new SelectListItem { Text = "--", Value = "" },
                                new SelectListItem { Text = "BAAC", Value = "BAAC", Selected = (ViewBag.BankName == "BAAC") },
                                new SelectListItem { Text = "ICBC", Value = "ICBC", Selected = (ViewBag.BankName == "ICBC") }
                            }, new {
                                @class = "form-control dropdown",
                                @style = "border-radius: 10px;width: 189px;"
                            })
                        </div>
                    </div>
                     <input type="hidden" id="bankName" name="bankName" value="" />
                    <div class="col-md-1">
                        <button type="button" data-toggle="modal" data-target="#WaitingModal" class="btn" style="padding:0px;margin-bottom: 13px;" onclick="updateBalancingTable()">
                            <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg p-0" alt="Search" />
                        </button>
                    </div>
                </div>

                <!-- Row 2: Terminal ID, From Date, To Date, Rows -->
                <div class="row" style="margin-top: 20px; align-items: center; display: flex; justify-content: space-around; padding: 0vw 2vw; white-space: nowrap;">
                    <!-- Terminal ID -->
                    <div class="col-md-1">
                        <h>Terminal ID : </h>
                    </div>
                    <div class="item col-md-2">
                        <select class="form-control selectpicker subsearch" id="terminalno" name="TermID" data-live-search="true">
                            <option value="">--</option>
                           @foreach (var item in ViewBag.CurrentTID)
{
    if (item.TERM_ID == ViewBag.TermID)
    {
        <option value="@item.TERM_ID" selected>
            @item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME
        </option>
    }
    else
    {
        <option value="@item.TERM_ID">
            @item.TERM_SEQ : @item.TERM_ID : @item.TERM_NAME
        </option>
    }
}

                        </select>
                    </div>

                    <!-- From Date -->
                    <div class="col-md-1">
                        <h>From Date : </h>
                    </div>
                    <div class="item col-md-2">
                        @Html.TextBox("fromdate", ViewBag.CurrentFr as string, new {
                            @class = "form-control subsearch",
                            @type = "date",
                            @min = "1997-01-01",
                            @max = "2030-12-31"
                        })
                    </div>

                    <!-- To Date -->
                    <div class="col-md-1">
                        <h>To Date : </h>
                    </div>
                    <div class="item col-md-2">
                        @Html.TextBox("todate", ViewBag.CurrentTo as string, new {
                            @class = "form-control subsearch",
                            @type = "date",
                            @min = "1997-01-01",
                            @max = "2030-12-31"
                        })
                    </div>
                </div>

                <!-- Row 3: Rows (record count) -->
                <div class="row" style="margin-top: 40px; align-items: center; display: flex; padding: 0vw 3vw;">
                    <div class="col-md-1" style="margin-right: 41px;">
                        <h>Rows : </h>
                    </div>
                    <div class="col-md-2">
                        @Html.DropDownList("row", new List<SelectListItem>
                        {
                            new SelectListItem { Text = "50", Value = "50" },
                            new SelectListItem { Text = "100", Value = "100" },
                            new SelectListItem { Text = "500", Value = "500" },
                            new SelectListItem { Text = "1000", Value = "1000" }
                        }, new {
                            @class = "form-control dropdown",
                            @style = "width: 187px;"
                        })
                    </div>
                </div>

                <!-- Row 4: Buttons -->
                <div class="row justify-content-md-center" style="margin-top: 36px;">
                    <div class="col" id="before-submit">
                        <div id="submit">
                           <button type="button" data-toggle="modal" data-target="#WaitingModal" class="btn" style="padding:0px;" onclick="updateBalancingTable()">

                                <img src="~/images/icon_search.png" style="width: 50px; height: 50px" class="rounded-lg p-0" alt="Search" />
                            </button>
                            <button type="submit" id="btnclear" class="btn" data-toggle="tooltip" title="ล้างข้อมูล" style="padding:0px; border: 0px; background-color: transparent;" onclick="clearFunction()">
                                <img src="~/images/icon_delete.png" style="width: 50px; height: 50px" class="rounded-lg p-0" alt="Clear Data" />
                            </button>
                            <a id="btnSEExp" data-toggle="tooltip" title="Excel Export Report" style="cursor: pointer; padding:0px;">
                                <img src="~/images/icon_excel.png" style="width: 50px; height: 50px" class="rounded-lg p-0" alt="Excel Export Report" />
                            </a>
                            <button type="button" id="btnInsertBalance" class="btn text-white" title="เพิ่มข้อมูล" data-toggle="modal" data-target="#InsertModalBalance"
        style="padding: 0px 15px; border: 0px; background-color: #136f8d; font-size: 18px; height: 40px;">
    Add files
</button>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row" style="background-color: #f8d5ad;width: fit-content;padding: 8px;margin-left: 3px;border-radius: 15px;font-size: 22px;font-weight: bold;margin-bottom: 15px; border:1px solid lightgrey;">

        <div class="col" style="display: flex;justify-content: center;">
            <a style="white-space:nowrap;align-items: center;display: flex;">Total Record:</a>
        </div>
        <div class="col" style="display: flex;justify-content: center;">
            <a style="white-space:nowrap;display: flex;align-items: center;background-color: rgba(255,255,255,1);padding: 10px 35px 10px 35px;border-radius: 10px;" ;="">
                <span id="recordCount">0</span>
            </a>
        </div>
    </div>
    <div class="table-container dashboard-table">
      
            <table id="table-id" class="table table-striped custom-table">
                <thead id="t-header" style="">
                 <tr>
                    <th rowspan="2" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> No </th>
                    <th rowspan="2" style ="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Terminal ID </th>
                    <th rowspan="2" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Terminal Name </th>
                    <th rowspan="2" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Serial No </th>
                    <th rowspan="2" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Balancing Time </th>
                    <th colspan="3" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Initial </th>
                    <th colspan="3" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Deposit </th>
                    <th colspan="3" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Withdraw </th>
                    <th colspan="3" style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> Balance </th>
                </tr>
                <tr>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 100 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 500 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 1000 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 100 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 500 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 1000 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 100 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 500 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 1000 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 100 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 500 </th>
                    <th style="text-align:center; vertical-align: middle;text-wrap: nowrap;"> 1000 </th>
                </tr>
            </thead>

                <tbody>
                    <tr>
                        <td colspan="18" style="text-align:center;">No data</td>
                    </tr>
                </tbody>
            </table>
   
    </div>

        <div class="row">
            <div class="col-md-2" style="z-index:2;">
                <p style="font-size:16px;font-weight:bolder;">
                    Select page :
                    @Html.DropDownList("page", new SelectListItem[] {

                    }, new
                    {
                    @class = "form-control",
                    onchange = "updateTable('page')"
                    })
                </p>
            </div>
            <div class="col colPagination" style="padding-top:10px;z-index:1;">

                <nav>
                    <div class="pagination">
                        <ul style="display:flex;">
                            <li data-page="prev" id="prev" style="visibility:hidden;" onclick="updateTable('prev')">
                                <a style="color: #7a7a7a;"> < </a>
                            </li>
                            <li id="pageButtonsContainer"></li>

                            <li data-page="next" id="next" style="visibility:hidden;" onclick=" updateTable('next')">
                                <a style="color: #7a7a7a;"> > </a>
                            </li>
                        </ul>
                    </div>
                </nav>
            </div>
        </div>
 </div>

 <!-- Modal -->
<div class="modal fade" id="InsertModalBalance" tabindex="-1" role="dialog" aria-labelledby="InsertModalLabelBalance" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="InsertModalLabelBalance">📥 อัปโหลดไฟล์ Balancing Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <form id="uploadFormBalance" enctype="multipart/form-data">
                <div class="modal-body">
                    <!-- 🔹 File Upload แบบ Drag & Drop + Preview -->
                    <div class="form-group">
                        <label>📄 เลือกไฟล์ (.txt)</label>

                        <div id="dropZoneBalance" class="border border-secondary p-4 text-center rounded" style="background-color: #f9f9f9; cursor: pointer;">
                            👉 คลิกหรือลากไฟล์มาวางที่นี่ (รองรับ .txt)
                            <input type="file" id="FileUploadBalance" name="FileUploadBalance" accept=".txt" multiple style="display:none;" />
                        </div>

                        <ul id="fileListBalance" class="list-group mt-2"></ul>

                        <small class="form-text text-muted mt-2">คุณสามารถเลือกได้หลายไฟล์ และลบรายการก่อนอัปโหลดได้</small>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">❌ ยกเลิก</button>
                    <button class="btn btn-success mt-2" onclick="uploadBalanceFiles()">📤 อัปโหลด</button>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="boxDownload" id="boxDownload" style="display: none;">
    <img class="imgDownload" src="~/images/loading.gif">
</div>
   


<script>
    $(document).ready(function () {

        // 🔄 แสดง/ซ่อน Loading ทั่วทั้งหน้า
        $(document).ajaxStart(() => $("#boxDownload").fadeIn());
        $(document).ajaxStop(() => $("#boxDownload").fadeOut());

        // 🌐 Global Variables
        const dropZone = document.getElementById("dropZoneBalance");
        const fileInput = document.getElementById("FileUploadBalance");
        const fileList = document.getElementById("fileListBalance");
        let selectedFiles = [];
        let isBankSearched = false;

        // 📦 อัปเดต Preview รายชื่อไฟล์
        function updateFileList() {
            fileList.innerHTML = selectedFiles.length === 0
                ? "<li class='list-group-item text-muted'>ยังไม่มีไฟล์ที่เลือก</li>"
                : selectedFiles.map((file, i) =>
                    `<li class="list-group-item d-flex justify-content-between align-items-center">
                        ${file.name}
                        <button type="button" class="btn btn-sm btn-danger" onclick="removeBalanceFile(${i})">❌</button>
                    </li>`
                ).join("");
        }

        // 🗑️ ลบไฟล์ที่เลือก
        window.removeBalanceFile = function (index) {
            selectedFiles.splice(index, 1);
            updateFileList();
        };

        // 📥 Drag & Drop + Click
        dropZone.addEventListener("click", () => fileInput.click());
        dropZone.addEventListener("dragover", e => {
            e.preventDefault();
            dropZone.classList.add("bg-light");
        });
        dropZone.addEventListener("dragleave", () => dropZone.classList.remove("bg-light"));
        dropZone.addEventListener("drop", e => {
            e.preventDefault();
            dropZone.classList.remove("bg-light");
            selectedFiles = [...selectedFiles, ...Array.from(e.dataTransfer.files)];
            updateFileList();
        });
        fileInput.addEventListener("change", e => {
            selectedFiles = [...selectedFiles, ...Array.from(e.target.files)];
            updateFileList();
        });

        // 📤 อัปโหลดไฟล์
        window.uploadBalanceFiles = function () {
            if (selectedFiles.length === 0) {
                alert("⚠️ กรุณาเลือกไฟล์อย่างน้อยหนึ่งไฟล์");
                return;
            }

            const selectedBank = $("#bankName").val();
            if (!selectedBank) {
                alert("⚠️ กรุณาเลือกธนาคารก่อนอัปโหลด");
                return;
            }

            const formData = new FormData();
            selectedFiles.forEach(file => formData.append("files", file));
            formData.append("_bank", selectedBank);

            $.ajax({
                url: '@Url.Action("UploadBalanceFiles", "Report")',
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                beforeSend: function () {
                    $(".modal-footer button").prop("disabled", true);
                },
               success: function (response) {
    alert(response?.message || "✅ อัปโหลดสำเร็จ");
    selectedFiles = [];
    updateFileList();
    $('#InsertModalBalance').modal('hide');
    updateBalancingTable(1, true); // ✅ โหลดตารางใหม่โดยข้าม validation
}
,
                error: () => {
                    alert("❌ อัปโหลดล้มเหลว กรุณาลองใหม่");
                },
                complete: function () {
                    $(".modal-footer button").prop("disabled", false);
                }
            });
        };

        // 📊 โหลดตาราง
       window.updateBalancingTable = function (page = 1, force = false) {
    const terminalID = $("#terminalno").val();
    const fromdate = $("#fromdate").val();
    const todate = $("#todate").val();
    const bankName = $("#bankName").val();

    if (!bankName || bankName === "null") {
        alert("⚠️ กรุณาเลือกธนาคารก่อนค้นหา");
        return;
    }

    if (!force && isBankSearched) {
        const hasDateOrTerminal = (fromdate && todate) || terminalID;
        const fromDateValue = new Date(fromdate);
        const toDateValue = new Date(todate);

        if (!hasDateOrTerminal) {
            alert("⚠️ กรุณาระบุ Terminal ID หรือช่วงวันที่ก่อนค้นหาอีกครั้ง");
            return;
        }

        if (isNaN(fromDateValue) || isNaN(toDateValue)) {
            alert("⚠️ กรุณาเลือกวันที่ให้ถูกต้อง");
            return;
        }

        if (fromDateValue > toDateValue) {
            alert("⚠️ วันที่เริ่มต้นต้องไม่เกินวันที่สิ้นสุด");
            return;
        }
    }

    isBankSearched = true;

    $.ajax({
        type: "GET",
        url: '@Url.Action("BalancingReportFetchData", "Report")',
        data: { terminalID, fromdate, todate, bankName, page },
        dataType: "json",
        success: function (data) {
            // ... (เหมือนเดิมทั้งหมด)
        },
        error: function (err) {
            console.error("Error:", err);
            $("#table-id tbody").html(`<tr><td colspan='18' style='text-align:center;'>ERROR</td></tr>`);
        }
    });
};

        // 📁 Export Excel
        $("#btnSEExp").on("click", function () {
            const terminalID = $("#terminalno").val();
            const fromdate = $("#fromdate").val();
            const todate = $("#todate").val();
            const bankName = $("#bankName").val();

            if (!bankName || bankName === "null") {
                alert("⚠️ กรุณาเลือกธนาคารก่อน");
                return;
            }

            const url = `${'@Url.Action("ExportBalancingReportToExcel", "Report")'}?terminalno=${terminalID}&fromdate=${fromdate}&todate=${todate}&bankName=${bankName}`;
            window.open(url, "_blank");
        });

        // ☑️ Scroll เสริมแนวนอน (ถ้ามี Plugin)
        if ($.fn.doubleScroll) {
            $(".dashboard-table").doubleScroll({ resetOnWindowResize: true });
        } else {
            console.warn("⚠️ doubleScroll plugin is not loaded. Horizontal scroll enhancement is disabled.");
        }
    });
</script>



